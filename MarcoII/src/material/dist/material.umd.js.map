{"version":3,"file":"material.umd.js","sources":["../src/utils/value.utils.ts","../src/components/ripple/abstract.mdc.ripple.ts","../src/utils/mdc.event.registry.ts","../src/components/button/mdc.button.directive.ts","../src/components/card/mdc.card.directive.ts","../src/components/abstract/abstract.mdc.input.ts","../src/components/checkbox/mdc.checkbox.directive.ts","../src/components/elevation/mdc.elevation.directive.ts","../src/components/fab/mdc.fab.directive.ts","../src/components/abstract/abstract.mdc.label.ts","../src/components/form-field/mdc.form-field.directive.ts","../src/components/icon-toggle/mdc.icon-toggle.directive.ts","../src/components/linear-progress/mdc.linear-progress.directive.ts","../src/components/list/mdc.list.directive.ts","../src/components/menu/mdc.simple.menu.directive.ts","../src/components/radio/mdc.radio.directive.ts","../src/components/ripple/mdc.ripple.directive.ts","../src/components/select/mdc.select.directive.ts","../src/components/slider/mdc.slider.directive.ts","../src/components/snackbar/mdc.snackbar.service.ts","../src/components/switch/mdc.switch.directive.ts","../src/components/tabs/mdc.tab.directive.ts","../src/components/tabs/mdc.tab.router.directive.ts","../src/components/tabs/mdc.tab.bar.directive.ts","../src/components/tabs/mdc.tab.bar.scroller.directive.ts","../src/components/text-field/mdc.text-field.directive.ts","../src/components/toolbar/mdc.toolbar.directive.ts","../src/components/utility/mdc.scrollbar-resize.directive.ts","../src/material.module.ts","../src/material.ts"],"sourcesContent":["export function asBoolean(value: any) {\r\n    return value != null && `${value}` !== 'false';\r\n}\r\n\r\nexport function asBooleanOrNull(value: any) {\r\n    if (value == null)\r\n        return value;\r\n    return `${value}` !== 'false';\r\n}\r\n","import {\r\n    ElementRef,\r\n    Renderer2\r\n} from '@angular/core';\r\nimport { MDCRippleFoundation, util } from '@material/ripple';\r\nimport { asBoolean, asBooleanOrNull } from '../../utils/value.utils';\r\nimport { MdcRippleAdapter } from './mdc.ripple.adapter';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\n// cast to correct type (string); getMatchesProperty is annotated as returning string[], but it does actually return a string:\r\nconst matchesProperty: string = <any>util.getMatchesProperty(HTMLElement.prototype);\r\n\r\n/** @docs-private */\r\nexport abstract class AbstractMdcRipple {\r\n    private mdcRippleAdapter: MdcRippleAdapter = {\r\n        browserSupportsCssVars: () => util.supportsCssVariables(window),\r\n        isUnbounded: () => this.isRippleUnbounded(),\r\n        isSurfaceActive: () => this.isRippleSurfaceActive(),\r\n        isSurfaceDisabled: () => this.isRippleSurfaceDisabled(),\r\n        addClass: (className: string) => this.addClassToRipple(className),\r\n        removeClass: (className: string) => this.removeClassFromRipple(className),\r\n        registerInteractionHandler: (type: string, handler: EventListener) => {\r\n            const target = (type === 'mouseup' || type === 'pointerup') ? window : this.getRippleInteractionElement().nativeElement;\r\n            this._registry.listenElm(this._renderer, type, handler, target, util.applyPassive());\r\n        },\r\n        deregisterInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.unlisten(type, handler);\r\n        },\r\n        registerResizeHandler: (handler: EventListener) => {\r\n            this._registry.listenElm(this._renderer, 'resize', handler, window);\r\n        },\r\n        deregisterResizeHandler: (handler: EventListener) => {\r\n            this._registry.unlisten('resize', handler);\r\n        },\r\n        updateCssVariable: (name: string, value: string) => { this._rippleElm.nativeElement.style.setProperty(name, value); },\r\n        computeBoundingRect: () => this.computeRippleBoundingRect(),\r\n        getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset})\r\n    }\r\n    protected _rippleFoundation: {\r\n        init(),\r\n        destroy(),\r\n        activate(event?: Event),\r\n        deactivate(event?: Event),\r\n        layout()\r\n    };\r\n\r\n    constructor(protected _rippleElm: ElementRef, protected _renderer: Renderer2, protected _registry: MdcEventRegistry) {}\r\n\r\n    protected initRipple() {\r\n        if (this._rippleFoundation)\r\n            throw new Error('initRipple() is called multiple times');\r\n        this._rippleFoundation = new MDCRippleFoundation(this.mdcRippleAdapter);\r\n        this._rippleFoundation.init();\r\n    }\r\n\r\n    protected destroyRipple() {\r\n        if (this._rippleFoundation) {\r\n            this._rippleFoundation.destroy();\r\n            this._rippleFoundation = null;\r\n        }\r\n    }\r\n\r\n    protected isRippleInitialized() {\r\n        return this._rippleFoundation != null;\r\n    }\r\n\r\n    activateRipple() {\r\n        if (this._rippleFoundation)\r\n            this._rippleFoundation.activate();\r\n    }\r\n\r\n    deactivateRipple() {\r\n        if (this._rippleFoundation)\r\n            this._rippleFoundation.deactivate();\r\n    }\r\n\r\n    protected getRippleInteractionElement() {\r\n        return this._rippleElm;\r\n    }\r\n\r\n    protected isRippleUnbounded() {\r\n        return false;\r\n    }\r\n\r\n    protected isRippleSurfaceActive() {\r\n        let interactionElm = this.getRippleInteractionElement();\r\n        if (interactionElm == null)\r\n            return false;\r\n        return this.isActiveElement(interactionElm.nativeElement);\r\n    }\r\n\r\n    protected isActiveElement(element: HTMLElement) {\r\n        return element == null ? false : element[matchesProperty](':active');\r\n    }\r\n\r\n    protected isRippleSurfaceDisabled() {\r\n        let interactionElm = this.getRippleInteractionElement();\r\n        if (interactionElm == null)\r\n            return true;\r\n        return !!interactionElm.nativeElement.attributes.getNamedItem('disabled');\r\n    }\r\n\r\n    protected addClassToRipple(name: string) {\r\n        this._renderer.addClass(this._rippleElm.nativeElement, name);\r\n    }\r\n\r\n    protected removeClassFromRipple(name: string) {\r\n        this._renderer.removeClass(this._rippleElm.nativeElement, name);\r\n    }\r\n\r\n    protected computeRippleBoundingRect() {\r\n        return this._rippleElm.nativeElement.getBoundingClientRect();\r\n    }\r\n}\r\n","import { ElementRef, Injectable, Optional, Renderer2, SkipSelf } from '@angular/core';\r\n\r\ntype UnlistenerMap = WeakMap<EventListener, Function>;\r\nconst unlisteners: Map<string, UnlistenerMap> = new Map<string, UnlistenerMap>();\r\n\r\n@Injectable()\r\nexport class MdcEventRegistry {\r\n    constructor() {}\r\n\r\n    listen(renderer: Renderer2, type: string, listener: EventListener, ref: ElementRef, options?: any) {\r\n        this.listenElm(renderer, type, listener, ref.nativeElement, options);\r\n    }\r\n\r\n    listenElm(renderer: Renderer2, type: string, listener: EventListener, el: Element | Window, options?: any) {\r\n        el.addEventListener(type, listener, options);\r\n        const unlistener = function() {\r\n            el.removeEventListener(type, listener, options);\r\n        };\r\n        this.registerUnlisten(type, listener, unlistener);\r\n    }\r\n\r\n    registerUnlisten(type: string, listener: EventListener, unlistener: Function) {\r\n        if (!unlisteners.has(type))\r\n            unlisteners.set(type, new WeakMap<EventListener, Function>());\r\n        unlisteners.get(type).set(listener, unlistener);\r\n    }\r\n\r\n    unlisten(type: string, listener: EventListener) {\r\n        if (!unlisteners.has(type))\r\n            return;\r\n        const unlistenerMap = unlisteners.get(type);\r\n        if (!unlistenerMap.has(listener))\r\n            return;\r\n        unlistenerMap.get(listener)();\r\n        unlistenerMap.delete(listener);\r\n    }\r\n}\r\n\r\n/** @docs-private */\r\nexport function MDC_EVENT_REGISTRY_PROVIDER_FACTORY(parent: MdcEventRegistry) {\r\n    return parent || new MdcEventRegistry();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MDC_EVENT_REGISTRY_PROVIDER = {\r\n    provide: MdcEventRegistry,\r\n    deps: [[new Optional(), new SkipSelf(), MdcEventRegistry]],\r\n    useFactory: MDC_EVENT_REGISTRY_PROVIDER_FACTORY\r\n};\r\n","import { AfterContentInit, Directive, ElementRef, HostBinding, Input, OnDestroy, Renderer2, forwardRef } from '@angular/core';\r\nimport { MDCRipple } from '@material/ripple';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\n// TODO: mdc-button__icon\r\n\r\n/**\r\n * Material design button. Anchors can also be styled as buttons with this directive.\r\n * Defaults to a button that is flushed with the surface.\r\n * Use the input modifiers to alter the styling, or create your own style\r\n * based on the provided sass-mixins.\r\n */\r\n@Directive({\r\n    selector: 'button[mdcButton],a[mdcButton]',\r\n    providers: [{provide: AbstractMdcRipple, useExisting: forwardRef(() => MdcButtonDirective) }]\r\n})\r\nexport class MdcButtonDirective extends AbstractMdcRipple implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.mdc-button') _cls = true;\r\n    private _compact = false;\r\n    private _dense = false;\r\n    private _primary = false;\r\n    private _accent = false;\r\n    private _raised = false;\r\n    private _stroked = false;\r\n\r\n    constructor(public _elm: ElementRef, renderer: Renderer2, registry: MdcEventRegistry) {\r\n        super(_elm, renderer, registry);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.initRipple();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyRipple();\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the button will be elevated\r\n     * upon the surface.\r\n     */\r\n    @HostBinding('class.mdc-button--raised') @Input()\r\n    get raised() {\r\n        return this._raised;\r\n    }\r\n\r\n    set raised(val: any) {\r\n        this._raised = asBoolean(val);\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the button will be styled \r\n     * flush with the surface and have a visible border.\r\n     */\r\n    @HostBinding('class.mdc-button--stroked') @Input()\r\n    get stroked() {\r\n        return this._stroked;\r\n    }\r\n\r\n    set stroked(val: any) {\r\n        this._stroked = asBoolean(val);\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the amount of horizontal padding\r\n     * in the button will be reduced.\r\n     */\r\n    @HostBinding('class.mdc-button--compact') @Input()\r\n    get compact() {\r\n        return this._compact;\r\n    }\r\n\r\n    set compact(val: any) {\r\n        this._compact = asBoolean(val);\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the button text is compressed\r\n     * to make it slightly smaller.\r\n     */\r\n    @HostBinding('class.mdc-button--dense') @Input()\r\n    get dense() {\r\n        return this._dense;\r\n    }\r\n\r\n    set dense(val: any) {\r\n        this._dense = asBoolean(val);\r\n    }\r\n}\r\n","import { AfterContentInit, AfterViewInit, Component, ContentChild, ContentChildren, Directive, ElementRef, HostBinding, HostListener,\r\n  Input, OnDestroy, QueryList, Renderer2, ViewEncapsulation } from '@angular/core';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcButtonDirective } from '../button/mdc.button.directive';\r\n\r\n/**\r\n * Directive for the primary area (containing titles and subtitles) of a card.\r\n * The primary area is typically composed of a title (<code>MdcCardTitleDirective</code>),\r\n * and subtitle (<code>MdcCardSubtitleDirective</code>).\r\n * This directive should be put inside the card itself (<code>MdcCardDirective</code>),\r\n * or inside an horizontal block in the card (<code>MdcCardHorizontalDirective</code>).\r\n */\r\n@Directive({\r\n    selector: '[mdcCardPrimary]'\r\n})\r\nexport class MdcCardPrimaryDirective {\r\n    @HostBinding('class.mdc-card__primary') _cls = true;\r\n\r\n    constructor() {}\r\n}\r\n\r\n/**\r\n * Directive for the title of a card. Should be put inside the primary area\r\n * (<code>MdcCardPrimaryDirective</code>) of a card.\r\n */\r\n@Directive({\r\n    selector: '[mdcCardTitle]',\r\n})\r\nexport class MdcCardTitleDirective {\r\n    @HostBinding('class.mdc-card__title') _cls = true;\r\n    private _large = false;\r\n    \r\n    constructor() {}\r\n\r\n    /**\r\n     * When this input is defined and does not have value false,\r\n     * the title will be made larger.\r\n     */\r\n    @HostBinding('class.mdc-card__title--large') @Input()\r\n    get large() {\r\n        return this._large;\r\n    }\r\n\r\n    set large(val: any) {\r\n        this._large = asBoolean(val);\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for the subtitle of a card. Should be put inside the primary area\r\n * (<code>MdcCardPrimaryDirective</code>) of a card.\r\n */\r\n@Directive({\r\n    selector: '[mdcCardSubtitle]',\r\n})\r\nexport class MdcCardSubtitleDirective {\r\n    @HostBinding('class.mdc-card__subtitle') _cls = true;\r\n    \r\n    constructor() {}\r\n}\r\n\r\n/**\r\n * Directive for the textual content of the card.\r\n * If used, this directive should be put inside the card itself ( (<code>MdcCardDirective</code>)),\r\n * or inside an horizontal block in the card (<code>MdcCardHorizontalDirective</code>)\r\n */\r\n@Directive({\r\n    selector: '[mdcCardText]',\r\n})\r\nexport class MdcCardTextDirective {\r\n    @HostBinding('class.mdc-card__supporting-text') _cls = true;\r\n\r\n    constructor() {}\r\n}\r\n\r\n/**\r\n * Directive for rich media embedded in cards.\r\n * If used, this directive should be put inside the card itself (<code>MdcCardDirective</code>).\r\n * For media items inside an horizonal block, use <code>MdcCardMediaItemDirective</code>\r\n * instead.\r\n */\r\n@Directive({\r\n    selector: '[mdcCardMedia]',\r\n})\r\nexport class MdcCardMediaDirective {\r\n    @HostBinding('class.mdc-card__media') _cls = true;\r\n    \r\n    constructor() {}\r\n}\r\n\r\n/**\r\n * Directive for showing the different actions a user can take. Composed of one or more\r\n * card actions, which must be buttons that have the <code>MdcButtonDirective</code>.\r\n * (Icon buttons as actions are currently not supported by the upstream Material Components\r\n * Web library. Once they are supported, we'll add support for them as card actions too).\r\n */\r\n@Directive({\r\n    selector: '[mdcCardActions]'\r\n})\r\nexport class MdcCardActionsDirective implements AfterContentInit  {\r\n    @HostBinding('class.mdc-card__actions') _cls = true;\r\n    @ContentChildren(MdcButtonDirective, {descendants: false}) _children: QueryList<MdcButtonDirective>;\r\n    private _initialized = false;\r\n    private _compact: boolean;\r\n    private _vertical = false;\r\n\r\n    constructor(private renderer: Renderer2) {}\r\n\r\n    ngAfterContentInit() {\r\n        this._initialized = true;\r\n        this._initChildren();\r\n        this._children.changes.subscribe(() => {\r\n            this._initChildren();\r\n        });\r\n    }\r\n\r\n    private _initChildren() {\r\n        if (this._initialized)\r\n            this._children.forEach(btn => {\r\n                this.renderer.addClass(btn._elm.nativeElement, 'mdc-card__action');\r\n                if (this._compact != null)\r\n                    if (this._compact)\r\n                        btn.compact = true;\r\n                    else\r\n                        btn.compact = false;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, all contained buttions\r\n     * will automagically get compact styling, which is equal to setting the <code>compact</code>\r\n     * input on the buttons individually.\r\n     */\r\n    @Input()\r\n    get compact() {\r\n        return this._compact;\r\n    }\r\n\r\n    set compact(val: any) {\r\n        if (val == null)\r\n            this._compact = val;\r\n        else {\r\n            val = asBoolean(val);\r\n            if (this._compact !== val) {\r\n                this._compact = val;\r\n                this._initChildren();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the actions are layed out\r\n     * vertically inside of horizontally.\r\n     */\r\n    @HostBinding('class.mdc-card__actions--vertical') @Input()\r\n    get vertical() {\r\n        return this._vertical;\r\n    }\r\n\r\n    set vertical(val: any) {\r\n        this._vertical = asBoolean(val);\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for stacking multiple card blocks horizontally instead of vertically inside the card.\r\n * This directive should be put inside the card itself (<code>MdcCardDirective</code>) and wraps\r\n * the blocks that should be stacked horizontally, such as <code>MdcCardPrimaryDirective</code>,\r\n * <code>MdcCardMediaItemDirective</code>, and <code>MdcCardActionsDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcCardHorizontal]',\r\n})\r\nexport class MdcCardHorizontalDirective {\r\n    @HostBinding('class.mdc-card__horizontal-block') _cls = true;\r\n    \r\n    constructor() {}\r\n}\r\n\r\n/**\r\n * Directive for media items. They are intended for use in horizontal blocks, taking up a fixed height,\r\n * rather than stretching to the width of the card.\r\n * Use the <code>sizeFactor</code> input to select from some predefined media item sizes.\r\n */\r\n@Directive({\r\n    selector: '[mdcCardMediaItem]',\r\n})\r\nexport class MdcCardMediaItemDirective {\r\n    @HostBinding('class.mdc-card__media-item') _cls = true;\r\n    private _size = 1;\r\n    \r\n    constructor() {}\r\n\r\n    @HostBinding('class.mdc-card__media-item--1dot5x') get _size1dot5() {\r\n        return this._size === 1.5;\r\n    }\r\n\r\n    @HostBinding('class.mdc-card__media-item--2x') get _size2() {\r\n        return this._size === 2;\r\n    }\r\n\r\n    @HostBinding('class.mdc-card__media-item--3x') get _size3() {\r\n        return this._size === 3;\r\n    }\r\n\r\n    /**\r\n     * Directive to select the media item size. Possible values are:<br/>\r\n     * 1 (the default): sets the height to 80px.<br/>\r\n     * 1.5: sets the height to 120px.<br/>\r\n     * 2: sets the height to 160px.<br/>\r\n     * 3: sets the height to 240px.<br/>\r\n     * Any other value will reset <code>sizeFactor</code> to 1, to have a 80px height.\r\n     */\r\n    @Input()\r\n    get sizeFactor() {\r\n        return this._size;\r\n    }\r\n    \r\n    set sizeFactor(val: any) {\r\n        if (+val === 1.5)\r\n            this._size = 1.5;\r\n        else if (+val === 2)\r\n            this._size = 2;\r\n        else if (+val === 3)\r\n            this._size = 3;\r\n        else\r\n            this._size = 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for a material designed card. The card can be composed with the following directives:\r\n * <code>MdcCardPrimaryDirective</code>, <code>MdcCardTextDirective</code>, <code>MdcCardMediaDirective</code>,\r\n * <code>MdcCardActionsDirective</code>, <code>MdcCardHorizontalDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcCard]'\r\n})\r\nexport class MdcCardDirective {\r\n    @HostBinding('class.mdc-card') _cls = true;\r\n\r\n    constructor() {}\r\n}\r\n","import { ElementRef } from '@angular/core';\r\n\r\n/** @docs-private */\r\nexport abstract class AbstractMdcInput {\r\n    abstract id: string;\r\n    abstract _elm: ElementRef;\r\n}\r\n","import { AfterContentInit, Component, ContentChild, Directive, ElementRef, EventEmitter, HostBinding, HostListener,\r\n  Input, OnDestroy, OnInit, Optional, Output, Provider, Renderer2, Self, ViewChild, ViewEncapsulation, forwardRef } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { MDCCheckboxFoundation } from '@material/checkbox';\r\nimport { MdcCheckboxAdapter } from './mdc.checkbox.adapter';\r\nimport { AbstractMdcInput } from '../abstract/abstract.mdc.input';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\n\r\n/**\r\n * Directive for the input element of an <code>MdcCheckboxDirective</code>.\r\n */\r\n@Directive({\r\n    selector: 'input[mdcCheckboxInput][type=checkbox]',\r\n    providers: [{provide: AbstractMdcInput, useExisting: forwardRef(() => MdcCheckboxInputDirective) }]\r\n})\r\nexport class MdcCheckboxInputDirective extends AbstractMdcInput {\r\n    @HostBinding('class.mdc-checkbox__native-control') _cls = true;\r\n    private _id: string;\r\n    private _disabled = false;\r\n\r\n    constructor(public _elm: ElementRef, @Optional() @Self() public _cntr: NgControl) {\r\n        super();\r\n    }\r\n\r\n    /** @docs-private */\r\n    @HostBinding()\r\n    @Input() get id() {\r\n        return this._id;\r\n    }\r\n  \r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    /** @docs-private */\r\n    @HostBinding()\r\n    @Input() get disabled() {\r\n        return this._cntr ? this._cntr.disabled : this._disabled;\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        this._disabled = asBoolean(value);\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for creating a Material Design checkbox. The checkbox is driven by an\r\n * underlying native checkbox input, which must use the <code>MdcCheckboxInputDirective</code>\r\n * directive.\r\n * The current implementation will add all other required DOM elements (such as the\r\n * background).\r\n * Future implementations will also support supplying (customized) background\r\n * elements.\r\n * </p><p>\r\n * This directive can be used together with an <code>mdcFormField</code> to\r\n * easily position checkboxes and their labels, see\r\n * <a href=\"#/directives/form-field\">mdcFormField</a>.\r\n */\r\n@Directive({\r\n    selector: '[mdcCheckbox]'\r\n})\r\nexport class MdcCheckboxDirective extends AbstractMdcRipple implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.mdc-checkbox') _cls = true;\r\n    @ContentChild(MdcCheckboxInputDirective) _input: MdcCheckboxInputDirective;\r\n    private mdcAdapter: MdcCheckboxAdapter = {\r\n        addClass: (className: string) => {\r\n            this.renderer.addClass(this.root.nativeElement, className);\r\n        },\r\n        removeClass: (className: string) => {\r\n            this.renderer.removeClass(this.root.nativeElement, className);\r\n        },\r\n        registerAnimationEndHandler: (handler: EventListener) => {\r\n            this.registry.listen(this.renderer, 'animationend ', handler, this.root);\r\n        },\r\n        deregisterAnimationEndHandler: (handler: EventListener) => {\r\n            this.registry.unlisten('animationend', handler);\r\n        },\r\n        registerChangeHandler: (handler: EventListener) => {\r\n            if (this._input)\r\n                this.registry.listen(this.renderer, 'change', handler, this._input._elm);\r\n        },\r\n        deregisterChangeHandler: (handler: EventListener) => {\r\n            if (this._input)\r\n                this.registry.unlisten('change', handler);\r\n        },\r\n        getNativeControl: () => this._input ? this._input._elm.nativeElement : null,\r\n        forceLayout: () => this.root.nativeElement.offsetWidth, // force layout\r\n        isAttachedToDOM: () => !!this._input,\r\n    };\r\n    private foundation: { init: Function, destroy: Function } = new MDCCheckboxFoundation(this.mdcAdapter);\r\n\r\n    constructor(private renderer: Renderer2, private root: ElementRef, private registry: MdcEventRegistry) {\r\n        super(root, renderer, registry);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.addBackground();\r\n        this.initRipple();\r\n        this.foundation.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.foundation.destroy();\r\n        this.destroyRipple();\r\n    }\r\n\r\n    private addBackground() {\r\n        let path = this.renderer.createElement('path', 'svg');\r\n        this.renderer.addClass(path, 'mdc-checkbox__checkmark__path');\r\n        this.renderer.setAttribute(path, 'fill', 'none');\r\n        this.renderer.setAttribute(path, 'stroke', 'white');\r\n        this.renderer.setAttribute(path, 'd', 'M1.73,12.91 8.1,19.28 22.79,4.59');\r\n        let svg = this.renderer.createElement('svg', 'svg');\r\n        this.renderer.appendChild(svg, path);\r\n        this.renderer.addClass(svg, 'mdc-checkbox__checkmark');\r\n        this.renderer.setAttribute(svg, 'viewBox', '0 0 24 24');\r\n        let mixedmark = this.renderer.createElement('div');\r\n        this.renderer.addClass(mixedmark, 'mdc-checkbox__mixedmark');\r\n        let bg = this.renderer.createElement('div');\r\n        this.renderer.appendChild(bg, svg);\r\n        this.renderer.appendChild(bg, mixedmark);\r\n        this.renderer.addClass(bg, 'mdc-checkbox__background');\r\n        this.renderer.appendChild(this.root.nativeElement, bg);\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected getRippleInteractionElement() {\r\n        return this._input ? this._input._elm : null;\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected isRippleUnbounded() {\r\n        return true;\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected computeRippleBoundingRect() {\r\n        const dim = 40;\r\n        const {left, top} = this.root.nativeElement.getBoundingClientRect();\r\n        return {\r\n            top,\r\n            left,\r\n            right: left + dim,\r\n            bottom: top + dim,\r\n            width: dim,\r\n            height: dim\r\n        };\r\n    }\r\n\r\n    @HostBinding('class.mdc-checkbox--disabled') get _disabled() {\r\n        return this._input == null || this._input.disabled;\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostBinding, Input, AfterContentInit, Renderer2 } from '@angular/core';\r\nimport { MDCRipple } from '@material/ripple';\r\nimport { MDCRippleFoundation } from '@material/ripple';\r\nimport { asBoolean, asBooleanOrNull } from '../../utils/value.utils';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\n\r\n/**\r\n * Directive for elevating an element above its surface.\r\n */\r\n@Directive({\r\n    selector: '[mdcElevation]'\r\n})\r\nexport class MdcElevationDirective implements AfterContentInit {\r\n    private _z: number = null;\r\n    private _transition;\r\n\r\n    constructor(private rndr: Renderer2, private elm: ElementRef) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (this._z == null)\r\n            this.mdcElevation = 1;\r\n    }\r\n\r\n    /**\r\n     * Input for setting the elevation (z-space). The value sould be in the range [0, 24].\r\n     * When set to 0, the element will not be elevated! The default value is 1.\r\n     */\r\n    @Input() get mdcElevation() {\r\n        return this._z;\r\n    }\r\n\r\n    set mdcElevation(value: string | number) {\r\n        let newValue = (value == null || value === '') ? 1 : +value;\r\n        if (newValue < 0)\r\n            newValue = 0;\r\n        if (newValue > 24)\r\n            newValue = 24;\r\n        if (newValue !== this._z) {\r\n            if (this._z != null)\r\n                this.rndr.removeClass(this.elm.nativeElement, 'mdc-elevation--z' + this._z);\r\n            this.rndr.addClass(this.elm.nativeElement, 'mdc-elevation--z' + newValue);\r\n        }\r\n        this._z = newValue;\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, changes of the elevation\r\n     * will be animated.\r\n     */\r\n    @HostBinding('class.mdc-elevation-transition')\r\n    @Input() get animateTransition() {\r\n        return this._transition;\r\n    }\r\n\r\n    set animateTransition(value: any) {\r\n        this._transition = asBoolean(value);\r\n    }\r\n}\r\n","import { AfterContentInit, Directive, ElementRef, HostBinding, Input, OnDestroy, Renderer2, forwardRef } from '@angular/core';\r\nimport { MDCRipple } from '@material/ripple';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\n/**\r\n * Directive for the icon of a Floating Action Button\r\n * (<code>MdcFabDirective</code>).\r\n */\r\n@Directive({\r\n    selector: '[mdcFabIcon]'\r\n})\r\nexport class MdcFabIconDirective {\r\n    @HostBinding('class.mdc-fab__icon') _cls = true;\r\n}\r\n\r\n/**\r\n * Material design Floating Action Button. The element should embed\r\n * an icon element with the <code>MdcFabIconDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcFab]',\r\n    providers: [{provide: AbstractMdcRipple, useExisting: forwardRef(() => MdcFabDirective) }]\r\n})\r\nexport class MdcFabDirective extends AbstractMdcRipple implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.mdc-fab') _cls = true;\r\n    private _mini = false;\r\n    private _exited = false;\r\n\r\n    constructor(private _elm: ElementRef, renderer: Renderer2, registry: MdcEventRegistry) {\r\n        super(_elm, renderer, registry);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.initRipple();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyRipple();\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the FAB will\r\n     * be modified to a smaller size.\r\n     */\r\n    @HostBinding('class.mdc-fab--mini') @Input()\r\n    get mini() {\r\n        return this._mini;\r\n    }\r\n\r\n    set mini(val: any) {\r\n        this._mini = asBoolean(val);\r\n    }\r\n\r\n    /**\r\n     * Setting this property to true will animate the FAB out of view.\r\n     * Setting it to false will animate the FAB back into view.\r\n     */\r\n    @HostBinding('class.mdc-fab--exited') @Input()\r\n    get exited() {\r\n        return this._exited;\r\n    }\r\n\r\n    set exited(val: any) {\r\n        this._exited = asBoolean(val);\r\n    }\r\n}\r\n","import { ElementRef } from '@angular/core';\r\n\r\n/** @docs-private */\r\nexport abstract class AbstractMdcLabel {\r\n    abstract for: string;\r\n    abstract _elm: ElementRef;\r\n}\r\n","import { AfterContentInit, ContentChild, ContentChildren, forwardRef, Directive, ElementRef, HostBinding, HostListener,\r\n  Input, OnDestroy, Optional, Renderer2, Self } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { MDCFormFieldFoundation } from '@material/form-field';\r\nimport { MdcFormFieldAdapter } from './mdc.form-field.adapter';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\nimport { AbstractMdcInput } from '../abstract/abstract.mdc.input';\r\nimport { AbstractMdcLabel } from '../abstract/abstract.mdc.label';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\nlet nextId = 1;\r\n\r\n@Directive({\r\n    selector: 'input[mdcFormFieldInput], textarea[mdcFormFieldInput]',\r\n    providers: [{provide: AbstractMdcInput, useExisting: forwardRef(() => MdcFormFieldInputDirective) }]\r\n})\r\nexport class MdcFormFieldInputDirective extends AbstractMdcInput {\r\n    private _id: string;\r\n    private _disabled = false;\r\n\r\n    constructor(public _elm: ElementRef, @Optional() @Self() public _cntr: NgControl) {\r\n        super();\r\n    }\r\n\r\n    @HostBinding()\r\n    @Input() get id() {\r\n        return this._id;\r\n    }\r\n  \r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    @HostBinding()\r\n    @Input() get disabled() {\r\n        return this._cntr ? this._cntr.disabled : this._disabled;\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        this._disabled = asBoolean(value);\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: 'label[mdcFormFieldLabel]',\r\n    providers: [{provide: AbstractMdcLabel, useExisting: forwardRef(() => MdcFormFieldLabelDirective) }]\r\n})\r\nexport class MdcFormFieldLabelDirective extends AbstractMdcLabel {\r\n    @HostBinding() @Input() for: string;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n        super();\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcFormField]'\r\n})\r\nexport class MdcFormFieldDirective implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.mdc-form-field') _cls = true;\r\n    private _alignEnd = false;\r\n    @ContentChild(AbstractMdcRipple) rippleChild: AbstractMdcRipple;\r\n    @ContentChild(AbstractMdcInput) mdcInput: AbstractMdcInput;\r\n    @ContentChild(AbstractMdcLabel) mdcLabel: AbstractMdcLabel;\r\n\r\n    private mdcAdapter: MdcFormFieldAdapter = {\r\n        registerInteractionHandler: (type: string, handler: EventListener) => {\r\n            this.registry.listen(this.renderer, type, handler, this.root);\r\n        },\r\n        deregisterInteractionHandler: (type: string, handler: EventListener) => {\r\n            this.registry.unlisten(type, handler);\r\n        },\r\n        activateInputRipple: () => {\r\n            if (this.rippleChild)\r\n                this.rippleChild.activateRipple();\r\n        },\r\n        deactivateInputRipple: () => {\r\n            if (this.rippleChild)\r\n                this.rippleChild.deactivateRipple();\r\n        }\r\n    };\r\n    private foundation: { init: Function, destroy: Function } = new MDCFormFieldFoundation(this.mdcAdapter);\r\n\r\n    constructor(private renderer: Renderer2, private root: ElementRef, private registry: MdcEventRegistry) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (this.mdcInput != null && this.mdcLabel != null) {\r\n            if (this.mdcInput.id == null && this.mdcLabel.for == null)\r\n                this.mdcInput.id = this.mdcLabel.for = `mdc-form-input-${nextId++}`;\r\n            else if (this.mdcInput.id == null)\r\n                this.mdcInput.id = this.mdcLabel.for;\r\n            else if (this.mdcLabel.for == null)\r\n                this.mdcLabel.for = this.mdcInput.id;\r\n        }\r\n        this.foundation.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.foundation.destroy();\r\n    }\r\n\r\n    @Input() @HostBinding('class.mdc-form-field--align-end') get alignEnd() {\r\n        return this._alignEnd;\r\n    }\r\n\r\n    set alignEnd(val: any) {\r\n        this._alignEnd = asBoolean(val);\r\n    }\r\n}\r\n","import { AfterContentInit, AfterViewInit, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef, HostBinding,\r\n    HostListener, Input, OnDestroy, OnInit, Output, Provider, Renderer2, Self, ViewChild,\r\n    ViewEncapsulation } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MDCRipple } from '@material/ripple';\r\nimport { MDCIconToggleFoundation } from '@material/icon-toggle';\r\nimport { MdcIconToggleAdapter } from './mdc.icon-toggle.adapter';\r\nimport { asBoolean, asBooleanOrNull } from '../../utils/value.utils';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\ninterface MdcIconToggleChangeEvent {\r\n    isOn: boolean\r\n}\r\n\r\n/**\r\n * Directive for an icon nested inside a <code>MdcIconToggleDirective</code>.\r\n * This directive is only needed when the icon font uses CSS pseudo-elements in order\r\n * to provide the icon. This is how Font Awesome, and many other icon font libraries\r\n * provide the icons.\r\n * For icon fonts that don't use pseudo elements (such as the Material Design Icons from Google),\r\n * this directive is not necessary.\r\n */\r\n@Directive({\r\n    selector: '[mdcIconToggleIcon]'\r\n})\r\nexport class MdcIconToggleIconDirective {\r\n}\r\n\r\n/**\r\n * Directive for creating a Material Design icon toggle button.\r\n * The icon toggle is fully accessible, and works with any icon font.\r\n * When the icon font uses CSS pseudo-elements in order to display the icon,\r\n * embed an <code>MdcIconToggleIconDirective</code> inside this directive for\r\n * the actual icon. (Otherwise the pseudo-elements used for showing the icon\r\n * will interfere with the pseudo-elements this directive uses for showing\r\n * ripple styles).\r\n */\r\n@Directive({\r\n    selector: '[mdcIconToggle]'\r\n})\r\nexport class MdcIconToggleDirective extends AbstractMdcRipple implements AfterContentInit {\r\n    @HostBinding('class.mdc-icon-toggle') _hostClass = true;\r\n    @HostBinding('attr.role') _role: string = 'button';\r\n    @ContentChild(MdcIconToggleIconDirective, {read: ElementRef}) _innerIcon: ElementRef;\r\n    /**\r\n     * Event emitted when the state of the icon changes (for example when a user clicks\r\n     * the icon).\r\n     */\r\n    @Output() isOnChange: EventEmitter<boolean> = new EventEmitter();\r\n    private _onChange: (value: any) => void = (value) => {};\r\n    private _onTouched: () => any = () => {};\r\n    private _beforeInitQueu: Array<() => any> = [];\r\n    private _initialized = false;\r\n    private _labelOn: string;\r\n    private _labelOff: string;\r\n    private _iconOn: string;\r\n    private _iconOff: string;\r\n    private _iconIsClass: boolean;\r\n    private mdcAdapter: MdcIconToggleAdapter = {\r\n        addClass: (className: string) => {\r\n            let inner = this._innerIcon && this._iconIsClass !== false && (className === this._iconOn || className === this._iconOff);\r\n            this.renderer.addClass(inner ? this._innerIcon.nativeElement : this.elm.nativeElement, className);\r\n        },\r\n        removeClass: (className: string) => {\r\n            let inner = this._innerIcon && this._iconIsClass !== false && (className === this._iconOn || className === this._iconOff);            \r\n            this.renderer.removeClass(inner ? this._innerIcon.nativeElement : this.elm.nativeElement, className);\r\n        },\r\n        registerInteractionHandler: (type: string, handler: EventListener) => {\r\n            this.registry.listen(this.renderer, type, handler, this.elm);\r\n        },\r\n        deregisterInteractionHandler: (type: string, handler: EventListener) => {\r\n            this.registry.unlisten(type, handler);\r\n        },\r\n        setText: (text: string) => {\r\n            if (this._innerIcon)\r\n                this._innerIcon.nativeElement.textContent = text;\r\n            else\r\n                this.elm.nativeElement.textContent = text;\r\n        },\r\n        getTabIndex: () => this.elm.nativeElement.tabIndex,\r\n        setTabIndex: (tabIndex: number) => { this.elm.nativeElement.tabIndex = tabIndex; },\r\n        getAttr: (name: string) => this.elm.nativeElement.getAttribute(name),\r\n        setAttr: (name: string, value: string) => { this.renderer.setAttribute(this.elm.nativeElement, name, value); },\r\n        rmAttr: (name: string) => { this.renderer.removeAttribute(this.elm.nativeElement, name); },\r\n        notifyChange: (evtData: MdcIconToggleChangeEvent) => {\r\n            this._onChange(evtData.isOn);\r\n            this.isOnChange.emit(evtData.isOn);\r\n        }\r\n    };\r\n    private foundation: {\r\n        init(),\r\n        destroy(),\r\n        setDisabled(disabled: boolean),\r\n        isDisabled(): boolean,\r\n        isOn(): boolean,\r\n        toggle(isOn?: boolean)\r\n        refreshToggleData(),\r\n        isKeyboardActivated(): boolean\r\n    } = new MDCIconToggleFoundation(this.mdcAdapter);\r\n\r\n    constructor(private elm: ElementRef, private renderer: Renderer2, private registry: MdcEventRegistry) {\r\n        super(elm, renderer, registry);\r\n    }\r\n  \r\n    ngAfterContentInit() {\r\n        this.initDefaultAttributes();\r\n        this.initializeData();\r\n        this.foundation.init();\r\n        // run all deferred foundation interactions:\r\n        for (let fun of this._beforeInitQueu)\r\n            fun();\r\n        this._beforeInitQueu = [];\r\n        // the foundation doesn't initialize the iconOn/iconOff and labelOn/labelOff until\r\n        // toggle is called for the first time,\r\n        // also, this will ensure 'aria-pressed' and 'aria-label' attributes are initialized:\r\n        this.foundation.toggle(this.foundation.isOn());\r\n        this.initRipple();\r\n        this._initialized = true;\r\n    }\r\n  \r\n    ngOnDestroy() {\r\n        this.destroyRipple();\r\n        this.foundation.destroy();\r\n    }\r\n\r\n    private execAfterInit(fun: () => any) {\r\n        if (this._initialized)\r\n            fun();\r\n        else\r\n            this._beforeInitQueu.push(fun);\r\n    }\r\n\r\n    private refreshData() {\r\n        if (this._initialized) {\r\n            this.initializeData();\r\n            this.foundation.refreshToggleData();\r\n        }\r\n    }\r\n\r\n    private initDefaultAttributes() {\r\n        if (!this.elm.nativeElement.hasAttribute('tabindex'))\r\n            // unless overridden by another tabIndex, we want icon-toggles to\r\n            // participate in tabbing (the foundation will remove the tabIndex\r\n            // when the icon-toggle is disabled):\r\n            this.elm.nativeElement.tabIndex = 0;\r\n    }\r\n\r\n    private initializeData() {\r\n        // iconOn/iconOff are classes when the iconIsClass is true, or when iconIsClass is not set,\r\n        //  and _innerIcon is used (because _innerIcon is specifically for cases where icons are set via pseudo elements\r\n        //  by using classes):\r\n        let iconIsClass = this._iconIsClass == null ? this._innerIcon != null : this._iconIsClass;\r\n        this.renderer.setAttribute(this.elm.nativeElement, 'data-toggle-on',\r\n                this.createDataAttrForToggle(this._labelOn, this._iconOn, iconIsClass));\r\n        this.renderer.setAttribute(this.elm.nativeElement, 'data-toggle-off',\r\n                this.createDataAttrForToggle(this._labelOff, this._iconOff, iconIsClass));\r\n    }\r\n\r\n    private createDataAttrForToggle(label: string, icon: string, iconIsClass: boolean) {\r\n        let data = {\r\n            label: label\r\n        };\r\n        data[iconIsClass ? 'cssClass' : 'content'] = icon;\r\n        return JSON.stringify(data);\r\n    }\r\n\r\n    /** @docs-private */\r\n    writeValue(obj: any) {\r\n        this.execAfterInit(() => this.foundation.toggle(!!obj));\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnChange(onChange: (value: any) => void) {\r\n        this._onChange = onChange;\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnTouched(onTouched: () => any) {\r\n        this._onTouched = onTouched;\r\n    }\r\n\r\n    /** @docs-private */\r\n    setDisabledState(disabled: boolean) {\r\n        this.disabled = disabled;\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected isRippleUnbounded() {\r\n        return true;\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected isRippleSurfaceActive() {\r\n        return this.foundation.isKeyboardActivated();\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected computeRippleBoundingRect() {\r\n        const dim = 48;\r\n        const {left, top} = this.elm.nativeElement.getBoundingClientRect();\r\n        return {\r\n            left,\r\n            top,\r\n            width: dim,\r\n            height: dim,\r\n            right: left + dim,\r\n            bottom: left + dim,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * The current state of the icon (true for on/pressed, false for off/unpressed).\r\n     */\r\n    @Input() get isOn() {\r\n        return this.foundation.isOn();\r\n    }\r\n\r\n    set isOn(value: any) {\r\n        this.execAfterInit(() => this.foundation.toggle(asBoolean(value)));\r\n    }\r\n\r\n    /**\r\n     * The aria-label to use for the on/pressed state of the icon.\r\n     */\r\n    @Input() get labelOn() {\r\n        return this._labelOn;\r\n    }\r\n\r\n    set labelOn(value: string) {\r\n        this._labelOn = value;\r\n        this.refreshData();\r\n    }\r\n\r\n    /**\r\n     * The aria-label to use for the off/unpressed state of the icon.\r\n     */\r\n    @Input() get labelOff() {\r\n        return this._labelOff;\r\n    }\r\n\r\n    set labelOff(value: string) {\r\n        this._labelOff = value;\r\n        this.refreshData();\r\n    }\r\n\r\n    /**\r\n     * The icon to use for the on/pressed state of the icon.\r\n     */\r\n    @Input() get iconOn() {\r\n        return this._iconOn;\r\n    }\r\n\r\n    set iconOn(value: string) {\r\n        this._iconOn = value;\r\n        this.refreshData();\r\n    }\r\n\r\n    /**\r\n     * The icon to use for the off/unpressed state of the icon.\r\n     */\r\n    @Input() get iconOff() {\r\n        return this._iconOff;\r\n    }\r\n\r\n    set iconOff(value: string) {\r\n        this._iconOff = value;\r\n        this.refreshData();\r\n    }\r\n\r\n    /**\r\n     * Some icon fonst (such as Font Awesome) use CSS class names to select the icon to show.\r\n     * Others, such as the Material Design Icons from Google use ligatures (allowing selection of\r\n     * the icon by using their textual name). When <code>iconIsClass</code> is true, the directive\r\n     * assumes <code>iconOn</code>, and <code>iconOff</code> represent class names. When\r\n     * <code>iconIsClass</code> is false, the directive assumes the use of ligatures.\r\n     * <p>\r\n     * When <code>iconIsClass</code> is not assigned, the directive bases its decision on whether\r\n     * or not an embedded <code>MdcIconToggleIconDirective</code> is used.\r\n     * In most cases you won't need to set this input, as the default based on an embedded\r\n     * <code>MdcIconToggleIconDirective</code> is typically what you need.\r\n     * </p>\r\n     */\r\n    @Input() get iconIsClass() {\r\n        return this._iconIsClass;\r\n    }\r\n\r\n    set iconIsClass(value: any) {\r\n        this._iconIsClass = asBooleanOrNull(value);\r\n        this.refreshData();\r\n    }\r\n\r\n    /**\r\n     * To disable the icon toggle, set this input to true.\r\n     */\r\n    @Input() get disabled() {\r\n        return this.foundation.isDisabled();\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        this.execAfterInit(() => {\r\n            let newValue = asBoolean(value);\r\n            // we only set the disabled state if it changes from the current value.\r\n            // if we don't do that, then calling setDisabled(false) after initialization\r\n            // will clear the tabIndex. So this works around a bug in @material/icon-toggle:\r\n            if (this.foundation.isDisabled() != newValue)\r\n                this.foundation.setDisabled(asBoolean(value));\r\n        });\r\n    }\r\n\r\n    @HostListener('(blur') _onBlur() {\r\n        this._onTouched();\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for adding Angular Forms (<code>ControlValueAccessor</code>) behavior to an\r\n * <code>MdcIconToggleDirective</code>. Allows the use of the Angular Forms API with\r\n * icon toggles, e.g. binding to <code>[(ngModel)]</code>, form validation, etc.\r\n */\r\n@Directive({\r\n    selector: '[mdcIconToggle][formControlName],[mdcIconToggle][formControl],[mdcIconToggle][ngModel]',\r\n    providers: [\r\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MdcFormsIconToggleDirective), multi: true}\r\n    ]\r\n})\r\nexport class MdcFormsIconToggleDirective implements ControlValueAccessor {\r\n    constructor(@Self() private mdcIconToggle: MdcIconToggleDirective) {\r\n    }\r\n\r\n    /** @docs-private */\r\n    writeValue(obj: any) {\r\n        this.mdcIconToggle.writeValue(obj);\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnChange(onChange: (value: any) => void) {\r\n        this.mdcIconToggle.registerOnChange(onChange);\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnTouched(onTouched: () => any) {\r\n        this.mdcIconToggle.registerOnTouched(onTouched);\r\n    }\r\n\r\n    /** @docs-private */\r\n    setDisabledState(disabled: boolean) {\r\n        this.mdcIconToggle.setDisabledState(disabled);\r\n    }\r\n}\r\n","import { AfterContentInit, Directive, ElementRef, HostBinding, Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { MDCLinearProgressFoundation, strings } from '@material/linear-progress';\r\nimport { MdcLinearProgressAdapter } from './mdc.linear-progress.adapter';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\nconst CLASS_INDETERMINATE = 'mdc-linear-progress--indeterminate';\r\nconst CLASS_REVERSED = 'mdc-linear-progress--reversed';\r\n\r\ninterface MdcLinearProgressFoundationInterface {\r\n    init();\r\n    destroy();\r\n    setDeterminate(isDeterminate: boolean);\r\n    setProgress(value: number);\r\n    setBuffer(value: number);\r\n    setReverse(isReversed: boolean);\r\n    open();\r\n    close();\r\n}\r\n\r\n/**\r\n * Directive for creating a Material Design linear progress indicator.\r\n * The current implementation will add and manage all DOM child elements that\r\n * are required for the wrapped <code>mdc-linear-progress</code> component.\r\n * Future implementations will also support supplying (customized)\r\n * DOM children.\r\n */\r\n@Directive({\r\n    selector: '[mdcLinearProgress]'\r\n})\r\nexport class MdcLinearProgressDirective implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.mdc-linear-progress') _cls = true;\r\n    @HostBinding('attr.role') _role: string = 'progressbar';\r\n    private _initialized = false;\r\n    @HostBinding('class.' + CLASS_INDETERMINATE) _indeterminate = false;\r\n    @HostBinding('class.' + CLASS_REVERSED) _reverse = false;\r\n    private _progress = 0;\r\n    private _buffer = 1;\r\n    private _closed = false;\r\n    private _elmBuffer: HTMLElement;\r\n    private _elmPrimaryBar: HTMLElement;\r\n\r\n    private mdcAdapter: MdcLinearProgressAdapter = {\r\n        addClass: (className: string) => {\r\n            if (className !== CLASS_INDETERMINATE && className != CLASS_REVERSED)\r\n                this._rndr.addClass(this._root.nativeElement, className);\r\n        },\r\n        getPrimaryBar: () => this._elmPrimaryBar,\r\n        getBuffer: () => this._elmBuffer,\r\n        hasClass: (className: string) => {\r\n            if (className === CLASS_INDETERMINATE)\r\n                return this._indeterminate;\r\n            if (className === CLASS_REVERSED)\r\n                return this._reverse;\r\n            return this._root.nativeElement.classList.contains(className);\r\n        },\r\n        removeClass: (className: string) => {\r\n            if (className !== CLASS_INDETERMINATE && className != CLASS_REVERSED)\r\n                this._rndr.removeClass(this._root.nativeElement, className);\r\n        },\r\n        setStyle: (el: Element, styleProperty: string, value: number) => {\r\n            this._rndr.setStyle(el, styleProperty, value);\r\n        }\r\n    };\r\n    private foundation: MdcLinearProgressFoundationInterface = new MDCLinearProgressFoundation(this.mdcAdapter);\r\n\r\n    constructor(private _rndr: Renderer2, private _root: ElementRef, private _registry: MdcEventRegistry) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.initElements();\r\n        this.foundation.init();\r\n        this._initialized = true;\r\n        this.foundation.setProgress(this._progress);\r\n        this.foundation.setBuffer(this._buffer);\r\n        if (this._closed)\r\n            this.foundation.close();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.foundation.destroy();\r\n    }\r\n\r\n    private initElements() {\r\n        const elmBufferingDots = this.addElement(this._root.nativeElement, 'div', ['mdc-linear-progress__buffering-dots']);\r\n        this._elmBuffer = this.addElement(this._root.nativeElement, 'div', ['mdc-linear-progress__buffer']);\r\n        this._elmPrimaryBar = this.addElement(this._root.nativeElement, 'div', ['mdc-linear-progress__bar', 'mdc-linear-progress__primary-bar']);\r\n        this.addElement(this._elmPrimaryBar, 'span', ['mdc-linear-progress__bar-inner']);\r\n        const secondaryBar = this.addElement(this._root.nativeElement, 'div', ['mdc-linear-progress__bar', 'mdc-linear-progress__secondary-bar']);\r\n        this.addElement(this._elmPrimaryBar, 'span', ['mdc-linear-progress__bar-inner']);\r\n    }\r\n\r\n    private addElement(parent: HTMLElement, element: string, classNames: string[]) {\r\n        let child = this._rndr.createElement(element);\r\n        classNames.forEach(name => {\r\n            this._rndr.addClass(child, name);\r\n        });\r\n        this._rndr.appendChild(parent, child);\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Puts the progress indicator in 'indeterminate' state, signaling\r\n     * that the exact progress on a measured task is not known.\r\n     */\r\n    @Input() @HostBinding('class.' + CLASS_INDETERMINATE)\r\n    get isIndeterminate() {\r\n        return this._indeterminate;\r\n    }\r\n    \r\n    set isIndeterminate(value: any) {\r\n        let newValue = asBoolean(value);\r\n        if (newValue !== this._indeterminate) {\r\n            this._indeterminate = newValue;\r\n            if (this._initialized) {\r\n                this.foundation.setDeterminate(!this._indeterminate);\r\n                if (!this._indeterminate) {\r\n                    this.foundation.setProgress(this._progress);\r\n                    this.foundation.setBuffer(this._buffer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reverses the direction of the linear progress indicator.\r\n     */\r\n    @Input() @HostBinding('class.' + CLASS_REVERSED)\r\n    get isReversed() {\r\n        return this._reverse;\r\n    }\r\n\r\n    set isReversed(value: any) {\r\n        this._reverse = asBoolean(value);\r\n        if (this._initialized)        \r\n            this.foundation.setReverse(this._reverse);\r\n    }\r\n\r\n    /**\r\n     * Set the progress, the value should be between [0, 1].\r\n     */\r\n    @Input()\r\n    get progressValue() {\r\n        return this._progress;\r\n    }\r\n\r\n    set progressValue(value: number | string) {\r\n        this._progress = +value;\r\n        if (this._initialized)        \r\n            this.foundation.setProgress(this._progress);\r\n    }\r\n\r\n    /**\r\n     * Set the buffer progress, the value should be between [0, 1].\r\n     */\r\n    @Input()\r\n    get bufferValue() {\r\n        return this._buffer;\r\n    }\r\n\r\n    set bufferValue(value: number | string) {\r\n        this._buffer = +value;\r\n        if (this._initialized)        \r\n            this.foundation.setBuffer(this._buffer);\r\n    }\r\n\r\n    /**\r\n     * When set to true this closes (animates away) the progress bar,\r\n     * when set to false this opens (animates into view) the progress bar.\r\n     */\r\n    @Input()\r\n    get isClosed() {\r\n        return this._closed;\r\n    }\r\n\r\n    set isClosed(value: any) {\r\n        let newValue = asBoolean(value);\r\n        if (newValue !== this._closed) {\r\n            this._closed = newValue;\r\n            if (this._initialized) {\r\n                if (newValue)\r\n                    this.foundation.close();\r\n                else\r\n                    this.foundation.open();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { AfterContentInit, Component, ContentChildren, Directive, ElementRef, HostBinding, HostListener,\r\n  Input, QueryList, Renderer2 } from '@angular/core';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcButtonDirective } from '../button/mdc.button.directive';\r\n\r\n/**\r\n * Directive for a separator in a list.\r\n * This directive, if used, should be the child of an <code>MdcListDirective</code>, or\r\n * an <code>MdcSelectMultipleNativeDirective</code>.\r\n * This directive also adds the \"role\" attribute to its element.\r\n */\r\n@Directive({\r\n    selector: '[mdcListDivider]',\r\n})\r\nexport class MdcListDividerDirective {\r\n    @HostBinding('class.mdc-list-divider') _cls = true;\r\n    @HostBinding('attr.role') _role = 'separator';\r\n    @HostBinding('attr.disabled') _disabled = false;\r\n    private _inset = false;\r\n    \r\n    constructor(private _elm: ElementRef) {\r\n        if (_elm.nativeElement.nodeName === 'OPTION') {\r\n            this._role = 'presentation';\r\n            this._disabled = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the divider is styled with\r\n     * an inset.\r\n     */\r\n    @Input() @HostBinding('class.mdc-list-divider--inset')\r\n    get hasInset() {\r\n        return this._inset;\r\n    }\r\n\r\n    set hasInset(val: any) {\r\n        this._inset = asBoolean(val);\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for the items of a material list.\r\n * This directive should be used for the direct children of a <code>MdcListDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcListItem]'\r\n})\r\nexport class MdcListItemDirective {\r\n    @HostBinding('class.mdc-list-item') _cls = true;\r\n    @HostBinding('attr.role') public _role = null;\r\n    private _disabled = false;\r\n    /**\r\n     * When a list is used inside an <code>mdcSimpleMenu</code>, or <code>mdcSelect</code>,\r\n     * this property can be used to assign a value to this choice/selection item.\r\n     */\r\n    @Input() value;\r\n\r\n    constructor(public _elm: ElementRef) {}\r\n\r\n    /**\r\n     * When a list is used inside an <code>mdcSimpleMenu</code>, or <code>mdcSelect</code>,\r\n     * this property can be used to disable the item. When disabled, the list-item will have\r\n     * the <code>aria-disabled</code> attribute, and for  <code>mdcSimpleMenu</code>,\r\n     * or <code>mdcSelect</code> will set the <code>tabindex</code> to <code>-1</code>.\r\n     */\r\n    @Input()\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    set disabled(val: any) {\r\n        this._disabled = asBoolean(val);\r\n    }\r\n\r\n    @HostBinding('attr.tabindex') get _tabIndex() {\r\n        if (this._role === 'menuitem' || this._role === 'option')\r\n            return this._disabled ? -1 : 0;\r\n        return null;\r\n    }\r\n\r\n    @HostBinding('attr.aria-disabled') get _ariaDisabled() {\r\n        if (this._disabled)\r\n            return 'true';\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Directive to mark the first line of an item with \"two line list\" styling\r\n * according to the Material Design spec.\r\n * This directive, if used, should be the child of an <code>MdcListItemDirective</code>.\r\n * Using this directive inside any <code>mdcListItem</code> will put the list\r\n * \"two line\" mode.\r\n */\r\n@Directive({\r\n    selector: '[mdcListItemText]'\r\n})\r\nexport class MdcListItemTextDirective {\r\n    @HostBinding('class.mdc-list-item__text') _cls = true;\r\n\r\n    constructor() {}\r\n}\r\n\r\n/**\r\n * Directive for the secondary text of an item with \"two line list\" styling.\r\n */\r\n@Directive({\r\n    selector: '[mdcListItemTextSecondary]',\r\n})\r\nexport class MdcListItemTextSecondaryDirective {\r\n    @HostBinding('class.mdc-list-item__text__secondary') _cls = true;\r\n    \r\n    constructor() {}\r\n}\r\n\r\n/**\r\n * Directive for the start detail item of a list item.\r\n * This directive, if used, should be the child of an <code>MdcListItemDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcListItemStartDetail]',\r\n})\r\nexport class MdcListItemStartDetailDirective {\r\n    @HostBinding('class.mdc-list-item__start-detail') _cls = true;\r\n    \r\n    constructor() {}\r\n}\r\n\r\n/**\r\n * Directive for the end detail item of a list item.\r\n * This directive, if used, should be the child of an <code>MdcListItemDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcListItemEndDetail]',\r\n})\r\nexport class MdcListItemEndDetailDirective {\r\n    @HostBinding('class.mdc-list-item__end-detail') _cls = true;\r\n    \r\n    constructor() {}\r\n}\r\n\r\nexport enum MdcListFunction {\r\n    plain, menu, select\r\n};\r\n\r\n/**\r\n * Directive for a material list.\r\n * The children of this directive should either be <code>MdcListItemDirective</code>,\r\n * or <code>MdcListDividerDirective</code> elements.\r\n * This directive can optionally be contained in a <code>MdcListGroupDirective</code>, in a\r\n * <code>MdcSimpleMenuDirective</code>, or in a <code>MdcSelectDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcList]',\r\n})\r\nexport class MdcListDirective implements AfterContentInit {\r\n    @HostBinding('class.mdc-list') _cls = true;\r\n    @ContentChildren(MdcListItemDirective) _items: QueryList<MdcListItemDirective>;\r\n    @ContentChildren(MdcListItemTextDirective, {descendants: true}) _texts: QueryList<MdcListItemTextDirective>;\r\n    @HostBinding('class.mdc-list--two-line') _twoLine = false;\r\n    private _function: MdcListFunction = MdcListFunction.plain;\r\n    _hidden = false;\r\n    private _dense = false;\r\n    private _avatar = false;\r\n    \r\n    constructor(public _elm: ElementRef) {}\r\n\r\n    ngAfterContentInit() {\r\n        this.updateItemRoles();\r\n        this._items.changes.subscribe(() => {\r\n            this.updateItemRoles();\r\n        });\r\n        this._texts.changes.subscribe(_ => this._twoLine = this._texts.length > 0);\r\n        this._twoLine = this._texts.length > 0;\r\n    }\r\n\r\n    private updateItemRoles() {\r\n        let itemRole = null;\r\n        if (this._function === MdcListFunction.menu)\r\n            itemRole = 'menuitem';\r\n        else if (this._function === MdcListFunction.select)\r\n            itemRole = 'option';\r\n        this._items.forEach(item => {\r\n            item._role = itemRole;\r\n        });\r\n    }\r\n\r\n    @HostBinding('attr.role') get _role() {\r\n        return (this._function === MdcListFunction.menu) ? 'menu' : null;\r\n        // Note: role=\"listbox\" is set on the mdcSelect, not on this mdcList\r\n    }\r\n\r\n    @HostBinding('attr.aria-hidden') get _ariaHidden() {\r\n        return (this._hidden && this._function === MdcListFunction.menu) ? 'true' : null;\r\n    }\r\n\r\n    @HostBinding('class.mdc-simple-menu__items') get _isMenu() {\r\n        return this._function === MdcListFunction.menu || this._function === MdcListFunction.select;\r\n    }\r\n\r\n    _setFunction(val: MdcListFunction) {\r\n        this._function = val;\r\n        this.updateItemRoles();\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the list will be styled more\r\n     * compact.\r\n     */\r\n    @Input() @HostBinding('class.mdc-list--dense')\r\n    get dense() {\r\n        return this._dense;\r\n    }\r\n    \r\n    set dense(val: any) {\r\n        this._dense = asBoolean(val);\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, elements with directive <code>mdcListItemStartDetail</code>\r\n     * will be styled for avatars: large, circular elements that lend themselves well to contact images, profile pictures, etc. \r\n     */\r\n    @Input() @HostBinding('class.mdc-list--avatar-list')\r\n    get avatarList() {\r\n        return this._avatar;\r\n    }\r\n\r\n    set avatarList(val: any) {\r\n        this._avatar = asBoolean(val);\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for a header inside a list group (<code>MdcListGroupDirective</code>) directive.\r\n */\r\n@Directive({\r\n    selector: '[mdcListGroupSubHeader]'\r\n})\r\nexport class MdcListGroupSubHeaderDirective {\r\n    @HostBinding('class.mdc-list-group__subheader') _cls = true;\r\n\r\n    constructor() {}\r\n}\r\n\r\n\r\n/**\r\n * Directive for a material designed list group, grouping several\r\n * <code>MdcListDirective</code> lists.\r\n * List groups should contain elements with <code>mdcListGroupSubHeader</code>,\r\n * and <code>mdcList</code> directives.\r\n */\r\n@Directive({\r\n    selector: '[mdcListGroup]'\r\n})\r\nexport class MdcListGroupDirective {\r\n    @HostBinding('class.mdc-list-group') _cls = true;\r\n\r\n    constructor() {}\r\n}\r\n","import { AfterContentInit, Component, ContentChildren, Directive, ElementRef, EventEmitter, HostBinding, HostListener,\r\n  Input, OnDestroy, Output, Provider, QueryList, Renderer2 } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { MDCSimpleMenuFoundation, MDCSimpleMenu, util } from '@material/menu';\r\nimport { MdcSimpleMenuAdapter } from './mdc.simple.menu.adapter';\r\nimport { MdcListDirective, MdcListItemDirective, MdcListFunction } from '../list/mdc.list.directive';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\nconst CLASS_MENU = 'mdc-simple-menu';\r\nconst CLASS_MENU_OPEN = 'mdc-simple-menu--open';\r\nconst CLASS_TOP_LEFT = 'mdc-simple-menu--open-from-top-left';\r\nconst CLASS_TOP_RIGHT = 'mdc-simple-menu--open-from-top-right';\r\nconst CLASS_BOTTOM_LEFT = 'mdc-simple-menu--open-from-bottom-left';\r\nconst CLASS_BOTTOM_RIGHT = 'mdc-simple-menu--open-from-bottom-right';\r\n\r\nexport interface MdcMenuSelection {\r\n    value: any,\r\n    index: number\r\n}\r\n\r\n/**\r\n * Directive for an optional anchor to which a menu can position itself.\r\n * Use the <code>menuAnchor</code> input of <code>MdcSimpleMenuDirective</code>\r\n * to bind the menu to the anchor. The anchor must be a direct parent of the menu.\r\n * It will get the following styles to make the positioning work:\r\n * <code>position: relative;</code>, and <code>overflow: visible;</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcMenuAnchor]',\r\n    exportAs: 'mdcMenuAnchor'\r\n})\r\nexport class MdcMenuAnchorDirective {\r\n    @HostBinding('class.mdc-menu-anchor') _cls = true;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for a spec aligned material design 'Simple Menu'.\r\n * This directive should wrap an <code>MdcListDirective</code>. The <code>mdcList</code>\r\n * contains the menu items (and possible separators).\r\n */\r\n@Directive({\r\n    selector: '[mdcSimpleMenu]'\r\n})\r\nexport class MdcSimpleMenuDirective implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.mdc-simple-menu') _cls = true;\r\n    private _function = MdcListFunction.menu;\r\n    private _open = false;\r\n    private _openFrom: 'tl' | 'tr' | 'bl' | 'br' | null = null;\r\n    /**\r\n     * Assign an (optional) <code>MdcMenuAnchorDirective</code>. If set the menu\r\n     * will position itself relative to this anchor element. The anchor should be\r\n     * a direct parent of this menu.\r\n     */\r\n    @Input() menuAnchor: MdcMenuAnchorDirective;\r\n    /**\r\n     * Event emitted when the user selects a value. The passed object contains a value\r\n     * (set to the <code>value</code> of the selected list item), and an index\r\n     * (set to the index of the selected list item).\r\n     */\r\n    @Output() pick: EventEmitter<MdcMenuSelection> = new EventEmitter();\r\n    /**\r\n     * Event emitted when the menu is closed without any selection being made.\r\n     */\r\n    @Output() cancel: EventEmitter<void> = new EventEmitter();\r\n    /**\r\n     * Event emitted when the menu is opened or closed.\r\n     */\r\n    @Output() isOpenChange: EventEmitter<boolean> = new EventEmitter();\r\n    private _lastList: MdcListDirective;\r\n    @ContentChildren(MdcListDirective) _listQuery: QueryList<MdcListDirective>;\r\n    private _prevFocus: Element;\r\n    private mdcAdapter: MdcSimpleMenuAdapter = {\r\n        addClass: (className: string) => {\r\n            this._rndr.addClass(this._elm.nativeElement, className);\r\n        },\r\n        removeClass: (className: string) => {\r\n            this._rndr.removeClass(this._elm.nativeElement, className);\r\n        },\r\n        hasClass: (className: string) => {\r\n            if (CLASS_MENU === className)\r\n                return true;\r\n            if (CLASS_MENU_OPEN === className)\r\n                return this._open;\r\n            if (CLASS_TOP_LEFT === className)\r\n                return this._openFrom === 'tl';\r\n            if (CLASS_TOP_RIGHT === className)\r\n                return this._openFrom === 'tr';\r\n            if (CLASS_BOTTOM_LEFT === className)\r\n                return this._openFrom === 'bl';\r\n            if (CLASS_BOTTOM_RIGHT === className)\r\n                return this._openFrom === 'br';\r\n            return this._elm.nativeElement.classList.contains(className);\r\n        },\r\n        hasNecessaryDom: () => this._listQuery.length != 0,\r\n        getAttributeForEventTarget: (target: Element, attrName: string) => target.getAttribute(attrName),\r\n        getInnerDimensions: () => {\r\n            let elm = this._list._elm.nativeElement;\r\n            return {width: elm.offsetWidth, height: elm.offsetHeight};\r\n        },\r\n        hasAnchor: () => this.menuAnchor != null,\r\n        getAnchorDimensions: () => {\r\n            if (!this.viewport)\r\n                return this.menuAnchor._elm.nativeElement.getBoundingClientRect();\r\n            let viewportRect = this.viewport.getBoundingClientRect();\r\n            let anchorRect = this.menuAnchor._elm.nativeElement.getBoundingClientRect();\r\n            return {\r\n                bottom: anchorRect.bottom - viewportRect.top,\r\n                left: anchorRect.left - viewportRect.left,\r\n                right: anchorRect.right - viewportRect.left,\r\n                top: anchorRect.top - viewportRect.top,\r\n                width: anchorRect.width,\r\n                height: anchorRect.height\r\n            };\r\n        },\r\n        getWindowDimensions: () => ({\r\n            width: this.viewport ? this.viewport.clientWidth : window.innerWidth,\r\n            height: this.viewport ? this.viewport.clientHeight : window.innerHeight\r\n        }),\r\n        setScale: (x: number, y: number) => {\r\n            this._elm.nativeElement.style[util.getTransformPropertyName(window)] = `scale(${x}, ${y})`;\r\n        },\r\n        setInnerScale: (x: number, y: number) => {\r\n            this._list._elm.nativeElement.style[util.getTransformPropertyName(window)] = `scale(${x}, ${y})`;\r\n        },\r\n        getNumberOfItems: () => this._list._items.length,\r\n        registerInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.listen(this._rndr, type, handler, this._elm);\r\n        },\r\n        deregisterInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.unlisten(type, handler);\r\n        },\r\n        registerBodyClickHandler: (handler: EventListener) => {\r\n            this._registry.listenElm(this._rndr, 'click', handler, document.body);\r\n        },\r\n        deregisterBodyClickHandler: (handler: EventListener) => {\r\n            this._registry.unlisten('click', handler);\r\n        },\r\n        getYParamsForItemAtIndex: (index: number) => {\r\n            const {offsetTop: top, offsetHeight: height} = this._list._items.toArray()[index]._elm.nativeElement;\r\n            return {top, height};\r\n        },\r\n        setTransitionDelayForItemAtIndex: (index: number, value: string | null) => {\r\n            this._list._items.toArray()[index]._elm.nativeElement.style.setProperty('transition-delay', value)\r\n        },\r\n        getIndexForEventTarget: (target: EventTarget) => this._list._items.toArray().map(i => i._elm.nativeElement).indexOf(target),\r\n        notifySelected: (evtData: {index: number}) => {\r\n            this._open = false;\r\n            this.pick.emit({index: evtData.index, value: this._list._items.toArray()[evtData.index].value});\r\n            this._onOpenClose();\r\n        },\r\n        notifyCancel: () => {\r\n            this._open = false;\r\n            this.cancel.emit();\r\n            this._onOpenClose();\r\n        },\r\n        saveFocus: () => {\r\n            this._prevFocus = document.activeElement;\r\n        },\r\n        restoreFocus: () => {\r\n            if (this._prevFocus)\r\n                (<any>this._prevFocus).focus();\r\n        },\r\n        isFocused: () => document.activeElement === this._elm.nativeElement,\r\n        focus: () => {\r\n            this._elm.nativeElement.focus();\r\n        },\r\n        getFocusedItemIndex: () => this._list._items.toArray().map(i => i._elm.nativeElement).indexOf(document.activeElement),\r\n        focusItemAtIndex: (index: number) => {\r\n            this._list._items.toArray()[index]._elm.nativeElement.focus();\r\n        },\r\n        isRtl: () => getComputedStyle(this._elm.nativeElement).getPropertyValue('direction') === 'rtl',\r\n        setTransformOrigin: (origin: string) => {\r\n            this._elm.nativeElement.style[`${util.getTransformPropertyName(window)}-origin`] = origin;\r\n        },\r\n        setPosition: (position: {top: string | undefined, right: string | undefined, bottom: string | undefined, left: string | undefined}) => {\r\n            let el = this._elm.nativeElement;\r\n            this._rndr.setStyle(el, 'left', 'left' in position ? position.left : null);\r\n            this._rndr.setStyle(el, 'right', 'right' in position ? position.right : null);\r\n            this._rndr.setStyle(el, 'top', 'top' in position ? position.top : null);\r\n            this._rndr.setStyle(el, 'bottom', 'bottom' in position ? position.bottom : null);\r\n        },\r\n        getAccurateTime: () => window.performance.now()\r\n    };\r\n    private foundation: {\r\n        open(arg?: {focusIndex?: number}),\r\n        close(event?: Event),\r\n        isOpen(): boolean\r\n    } = new MDCSimpleMenuFoundation(this.mdcAdapter);\r\n    // we need an MDCSimpleMenu for simple menu's contained inside mdc-select:\r\n    public _component: MDCSimpleMenu;\r\n\r\n    constructor(public _elm: ElementRef, private _rndr: Renderer2, private _registry: MdcEventRegistry) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this._lastList = this._listQuery.first;\r\n        if (this._lastList) {\r\n            this._lastList._setFunction(MdcListFunction.menu);\r\n            this._onOpenClose(false);\r\n        }\r\n        this._listQuery.changes.subscribe(() => {\r\n            if (this._lastList !== this._listQuery.first) {\r\n                this._lastList._setFunction(MdcListFunction.plain);\r\n                this._lastList = this._listQuery.first;\r\n                if (this._lastList) {\r\n                    this._lastList._setFunction(MdcListFunction.menu);\r\n                    this._onOpenClose(false);\r\n                    if (this._component == null)\r\n                        this._component = new MDCSimpleMenu(this._elm.nativeElement, this.foundation);\r\n                } else {\r\n                    this._component.destroy();\r\n                    this._component = null;\r\n                    this.foundation = new MDCSimpleMenuFoundation(this.mdcAdapter);\r\n                }\r\n            }\r\n        });\r\n        if (this._lastList)\r\n            // constructing the MDCSimpleMenu also initializes the foundation:\r\n            this._component = new MDCSimpleMenu(this._elm.nativeElement, this.foundation);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._component)\r\n            this._component.destroy();\r\n    }\r\n\r\n    private _onOpenClose(emit = true) {\r\n        if (this._list)\r\n            this._list._hidden = !this._open;\r\n        if (emit)\r\n            this.isOpenChange.emit(this._open);\r\n    }\r\n\r\n    set _listFunction(val: MdcListFunction) {\r\n        this._function = val;\r\n        if (this._lastList) // otherwise this will happen in ngAfterContentInit\r\n            this._list._setFunction(val);\r\n    }\r\n\r\n    get _list(): MdcListDirective {\r\n        return this._listQuery.first;\r\n    }\r\n\r\n    @HostBinding('class.mdc-select__menu') get _isSelect() {\r\n        return this._function === MdcListFunction.select;\r\n    }\r\n    \r\n    /**\r\n     * When this input is defined and does not have value false, the menu will be opened,\r\n     * otherwise the menu will be closed.\r\n     */\r\n    @Input() @HostBinding('class.mdc-simple-menu--open')\r\n    get isOpen() {\r\n        return this._open;\r\n    }\r\n    \r\n    set isOpen(val: any) {\r\n        let newValue = asBoolean(val);\r\n        if (newValue !== this._open) {\r\n            this._open = newValue;\r\n            if (this._component != null) {\r\n                if (this._open)\r\n                    this.foundation.open();\r\n                else\r\n                    this.foundation.close();\r\n            }\r\n            this._onOpenClose(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set this value if you want to customize the direction from which the menu will be opened.\r\n     * Note that without this setting the menu will base the direction upon its position in the viewport,\r\n     * which is normally the right behavior. Use <code>'tl'</code> for top-left, <code>'br'</code>\r\n     * for bottom-right, etc.\r\n     */\r\n    @Input()\r\n    get openFrom(): 'tl' | 'tr' | 'bl' | 'br' | null {\r\n        return this._openFrom;\r\n    }\r\n\r\n    set openFrom(val: 'tl' | 'tr' | 'bl' | 'br' | null) {\r\n        if (val === 'br' || val === 'bl' || val === 'tr' || val === 'tl')\r\n            this._openFrom = val;\r\n        else\r\n            this._openFrom = null;\r\n    }\r\n\r\n    @HostBinding('class.mdc-simple-menu--open-from-top-left') get _tl() { return this._openFrom === 'tl'; }\r\n    @HostBinding('class.mdc-simple-menu--open-from-top-right') get _tr() { return this._openFrom === 'tr'; }\r\n    @HostBinding('class.mdc-simple-menu--open-from-bottom-left') get _bl() { return this._openFrom === 'bl'; }\r\n    @HostBinding('class.mdc-simple-menu--open-from-bottom-right') get _br() { return this._openFrom === 'br'; }\r\n\r\n    /**\r\n     * Assign any <code>HTMLElement</code> to this property to use as the viewport instead of\r\n     * the window object. The menu will choose to open the menu from the top or bottom, and\r\n     * from the left or right, based on the space available inside the viewport.\r\n     * It's normally not needed to set this, and mainly added for the demos and examples.\r\n     */\r\n    @Input() viewport: HTMLElement;\r\n}\r\n","import { AfterContentInit, Component, ContentChild, Directive, ElementRef, EventEmitter, HostBinding, HostListener,\r\n  Input, OnDestroy, OnInit, Optional, Output, Provider, Renderer2, Self, ViewChild, ViewEncapsulation, forwardRef } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { MDCRadioFoundation } from '@material/radio';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\nimport { MdcRadioAdapter } from './mdc.radio.adapter';\r\nimport { AbstractMdcInput } from '../abstract/abstract.mdc.input';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\n/**\r\n * Directive for the input element of an <code>MdcRadioDirective</code>.\r\n */\r\n@Directive({\r\n    selector: 'input[mdcRadioInput][type=radio]',\r\n    providers: [{provide: AbstractMdcInput, useExisting: forwardRef(() => MdcRadioInputDirective) }]\r\n})\r\nexport class MdcRadioInputDirective extends AbstractMdcInput {\r\n    @HostBinding('class.mdc-radio__native-control') _cls = true;\r\n    private _id: string;\r\n    private _disabled = false;\r\n\r\n    constructor(public _elm: ElementRef, @Optional() @Self() public _cntr: NgControl) {\r\n        super();\r\n    }\r\n\r\n    /** @docs-private */\r\n    @HostBinding()\r\n    @Input() get id() {\r\n        return this._id;\r\n    }\r\n  \r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    /** @docs-private */\r\n    @HostBinding()\r\n    @Input() get disabled() {\r\n        return this._cntr ? this._cntr.disabled : this._disabled;\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        this._disabled = asBoolean(value);\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for creating a Material Design radio button. The radio button is driven by an\r\n * underlying native radio input, which must use the <code>MdcRadioInputDirective</code>\r\n * directive.\r\n * The current implementation will add all other required DOM elements (such as the\r\n * background).\r\n * Future implementations will also support supplying (customized) background\r\n * elements.\r\n * </p><p>\r\n * This directive can be used together with an <code>mdcFormField</code> to\r\n * easily position radio buttons and their labels, see\r\n * <a href=\"#/directives/form-field\">mdcFormField</a>.\r\n */\r\n@Directive({\r\n    selector: '[mdcRadio]'\r\n})\r\nexport class MdcRadioDirective extends AbstractMdcRipple implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.mdc-radio') _cls = true;\r\n    @ContentChild(MdcRadioInputDirective) _input: MdcRadioInputDirective;\r\n    private mdcAdapter: MdcRadioAdapter = {\r\n        addClass: (className: string) => {\r\n            this.renderer.addClass(this.root.nativeElement, className);\r\n        },\r\n        removeClass: (className: string) => {\r\n            this.renderer.removeClass(this.root.nativeElement, className);\r\n        },\r\n        getNativeControl: () => this._input ? this._input._elm.nativeElement : null\r\n    };\r\n    private foundation: { init: Function, destroy: Function } = new MDCRadioFoundation(this.mdcAdapter);\r\n\r\n    constructor(private renderer: Renderer2, private root: ElementRef, private registry: MdcEventRegistry) {\r\n        super(root, renderer, registry);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.addBackground();\r\n        this.initRipple();\r\n        this.foundation.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyRipple();\r\n        this.foundation.destroy();\r\n    }\r\n\r\n    private addBackground() {\r\n        let outerCircle = this.renderer.createElement('div');\r\n        this.renderer.addClass(outerCircle, 'mdc-radio__outer-circle');\r\n        let innerCircle = this.renderer.createElement('div');\r\n        this.renderer.addClass(innerCircle, 'mdc-radio__inner-circle');\r\n        let bg = this.renderer.createElement('div');\r\n        this.renderer.appendChild(bg, outerCircle);\r\n        this.renderer.appendChild(bg, innerCircle);\r\n        this.renderer.addClass(bg, 'mdc-radio__background');\r\n        this.renderer.appendChild(this.root.nativeElement, bg);\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected getRippleInteractionElement() {\r\n        return this._input ? this._input._elm : null;\r\n    }\r\n\r\n    /** @docs-private */\r\n    isRippleUnbounded() {\r\n        return true;\r\n    }\r\n\r\n    /** @docs-private */\r\n    isRippleSurfaceActive() {\r\n        // This is what the @material/radio MDCRadio component does, with the following comment:\r\n        // \"Radio buttons technically go 'active' whenever there is *any* keyboard interaction.\r\n        //  This is not the UI we desire.\"\r\n        return false;\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected computeRippleBoundingRect() {\r\n        const dim = 40;\r\n        const {left, top} = this.root.nativeElement.getBoundingClientRect();\r\n        return {\r\n            top,\r\n            left,\r\n            right: left + dim,\r\n            bottom: top + dim,\r\n            width: dim,\r\n            height: dim\r\n        };\r\n    }\r\n\r\n    @HostBinding('class.mdc-radio--disabled') get _disabled() {\r\n        return this._input == null || this._input.disabled;\r\n    }\r\n}\r\n","import { AfterContentInit, Directive, ElementRef, HostBinding,\r\n    Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { MDCRipple } from '@material/ripple';\r\nimport { MDCRippleFoundation } from '@material/ripple';\r\nimport { asBoolean, asBooleanOrNull } from '../../utils/value.utils';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\n/**\r\n * Directive for making an element a ripple surface.\r\n */\r\n@Directive({\r\n    selector: '[mdcRipple]'\r\n})\r\nexport class MdcRippleDirective extends AbstractMdcRipple implements AfterContentInit, OnDestroy {\r\n    private _initialized = false;\r\n    @HostBinding('class.mdc-ripple-surface') _on = false;\r\n    private _disabled: boolean = null;\r\n    private _unbounded = false;\r\n    private _dim = null;\r\n\r\n    constructor(private elm: ElementRef, private renderer: Renderer2, private registry: MdcEventRegistry) {\r\n        super(elm, renderer, registry);\r\n    }\r\n  \r\n    ngAfterContentInit() {\r\n        if (this._on)\r\n            this.initRipple();\r\n        this._initialized = true;\r\n    }\r\n  \r\n    ngOnDestroy() {\r\n        this.destroyRipple();\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected isRippleUnbounded() {\r\n        return this._unbounded;\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected isRippleSurfaceDisabled() {\r\n        return this._disabled == null ? super.isRippleSurfaceDisabled() : this._disabled;\r\n    }\r\n\r\n    /** @docs-private */\r\n    protected computeRippleBoundingRect() {\r\n        if (this._dim == null)\r\n            return super.computeRippleBoundingRect();\r\n        const {left, top} = this.elm.nativeElement.getBoundingClientRect();\r\n        return {\r\n            left,\r\n            top,\r\n            width: this._dim,\r\n            height: this._dim,\r\n            right: left + this._dim,\r\n            bottom: left + this._dim,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Set this input to false to remove the ripple effect from the surface.\r\n     */\r\n    @Input() get mdcRipple() {\r\n        return !this._on;\r\n    }\r\n\r\n    set mdcRipple(value: any) {\r\n        let newValue = asBoolean(value);\r\n        if (newValue !== this._on) {\r\n            this._on = newValue;\r\n            if (this._initialized) {\r\n                if (newValue)\r\n                    this.initRipple();\r\n                else\r\n                    this.destroyRipple();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * When this input has a value other than false, the ripple is unbounded.\r\n     * Surfaces for bounded ripples should have <code>overflow</code> set to hidden,\r\n     * while surfaces for unbounded ripples should have it set to <code>visible</code>.\r\n     */\r\n    @Input() get unbounded() {\r\n        return this._unbounded;\r\n    }\r\n\r\n    set unbounded(value: any) {\r\n        let newValue = asBoolean(value);\r\n        if (newValue !== this._unbounded) {\r\n            this._unbounded = newValue;\r\n            this.reInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This input sets the dimension of the ripple.\r\n     * This input can be set to null for returning to the defaults, which uses the surface\r\n     * element to compute the bounds of the ripple.\r\n     */\r\n    @Input() get dimension() {\r\n        return this._dim;\r\n    }\r\n\r\n    set dimension(value: string | number) {\r\n        this._dim = value == null ? null : +value;\r\n        this.layout();\r\n    }\r\n\r\n    /**\r\n     * This input can be used to programmatically enable/disable the ripple.\r\n     * When true, the ripple effect will be disabled, when false the ripple\r\n     * effect will be enabled. When not set, or <code>null</code> (default)\r\n     * the ripple effect enabled/disabled state depend on whether or not the\r\n     * surface element has the <code>disabled</code> attribute set.\r\n     */\r\n    @Input() get disabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        this._disabled = asBooleanOrNull(value);\r\n    }\r\n\r\n    private reInit() {\r\n        if (this._initialized && this.isRippleInitialized()) {\r\n            this.destroyRipple();\r\n            this.initRipple();\r\n        }\r\n    }\r\n\r\n    private layout() {\r\n        if (this._initialized && this.isRippleInitialized()) {\r\n            this._rippleFoundation.layout();\r\n        }\r\n    }\r\n}\r\n","import { AfterContentInit, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef, HostBinding, HostListener,\r\n  Input, OnDestroy, Output, QueryList, Renderer2, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MDCSelectFoundation, util } from '@material/select';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { takeUntil } from 'rxjs/operators/takeUntil';\r\nimport { MdcSelectAdapter } from './mdc.select.adapter';\r\nimport { MdcSimpleMenuDirective } from '../menu/mdc.simple.menu.directive';\r\nimport { MdcListDirective, MdcListItemDirective, MdcListFunction } from '../list/mdc.list.directive';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\nconst CLASS_SELECT = 'mdc-select';\r\nconst CLASS_SELECT_SELECTED_TEXT = 'mdc-select__selected-text';\r\n\r\n/**\r\n * Directive for the text representation of an <code>mdcSelect</code> selection control.\r\n */\r\n@Directive({\r\n    selector: '[mdcSelectedText]'\r\n})\r\nexport class MdcSelectTextDirective {\r\n    @HostBinding('class.' + CLASS_SELECT_SELECTED_TEXT) _cls = true;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for a spec aligned material design 'Select Control',\r\n * build on top of a simple menu.\r\n * This directive should wrap an <code>MdcSelectTextDirective</code>, and\r\n * an <code>MdcSimpleMenuDirective</code>\r\n */\r\n@Directive({\r\n    selector: '[mdcSelect]:not(select)'\r\n})\r\nexport class MdcSelectDirective implements AfterContentInit, OnDestroy {\r\n    private onDestroy$: Subject<any> = new Subject();\r\n    @HostBinding('class.' + CLASS_SELECT) _cls = true;\r\n    @HostBinding('attr.role') _role = 'listbox';\r\n    @ContentChild(MdcSimpleMenuDirective) _menu: MdcSimpleMenuDirective;\r\n    @ContentChild(MdcSelectTextDirective) _text: MdcSelectTextDirective;\r\n    private _onChange: (value: any) => void = (value) => {};\r\n    private _onTouched: () => any = () => {};\r\n    private _initialized = false;\r\n    private _value: any = null;\r\n    private _disabled = false;\r\n    /**\r\n     * Event emitted when the value of the select changes. Note that when an <code>mdcSelect</code> is used as a FormControl,\r\n     * it's also possible to bind to <code>ngModelChange</code> instead of <code>valueChange</code>.\r\n     */\r\n    @Output() valueChange: EventEmitter<any> = new EventEmitter();\r\n    private mdcAdapter: MdcSelectAdapter = {\r\n        addClass: (className: string) => {this._rndr.addClass(this._elm.nativeElement, className); },\r\n        removeClass: (className: string) => {this._rndr.removeClass(this._elm.nativeElement, className); },\r\n        setAttr: (attr, value) => {this._rndr.setAttribute(this._elm.nativeElement, attr, value); },\r\n        rmAttr: (attr) => {this._rndr.removeAttribute(this._elm.nativeElement, attr); },\r\n        computeBoundingRect: () => this._elm.nativeElement.getBoundingClientRect(),\r\n        registerInteractionHandler: (type, handler) => this._registry.listen(this._rndr, type, handler, this._elm),\r\n        deregisterInteractionHandler: (type, handler) => this._registry.unlisten(type, handler),\r\n        focus: () => {this._elm.nativeElement.focus(); },\r\n        makeTabbable: () => {this._elm.nativeElement.tabIndex = 0; },\r\n        makeUntabbable: () => {this._elm.nativeElement.tabIndex = -1; },\r\n        getComputedStyleValue: (prop) => window.getComputedStyle(this._elm.nativeElement).getPropertyValue(prop),\r\n        setStyle: (propertyName, value) => {this._rndr.setStyle(this._elm.nativeElement, propertyName, value); },\r\n        create2dRenderingContext: () => document.createElement('canvas').getContext('2d'),\r\n        setMenuElStyle: (propertyName, value) => this._rndr.setStyle(this._menuEl, propertyName, value),\r\n        setMenuElAttr: (attr, value) => this._rndr.setAttribute(this._menuEl, attr, value),\r\n        rmMenuElAttr: (attr) => this._rndr.removeAttribute(this._menuEl, attr),\r\n        getMenuElOffsetHeight: () => this._menuEl.offsetHeight,\r\n        openMenu: (focusIndex) => this._menu._component.show({focusIndex}),\r\n        isMenuOpen: () => this._menu._component.open,\r\n        setSelectedTextContent: (selectedTextContent) => {\r\n            if (this._text)\r\n                this._text._elm.nativeElement.textContent = selectedTextContent;\r\n        },\r\n        getNumberOfOptions: () => this._items.length,\r\n        getTextForOptionAtIndex: (index) => this._items[index]._elm.nativeElement.textContent,\r\n        getValueForOptionAtIndex: (index) => this._items[index].value,\r\n        setAttrForOptionAtIndex: (index, attr, value) => this._rndr.setAttribute(this._items[index]._elm.nativeElement, attr, value),\r\n        rmAttrForOptionAtIndex: (index, attr) => this._rndr.removeAttribute(this._items[index]._elm.nativeElement, attr),\r\n        getOffsetTopForOptionAtIndex: (index) => this._items[index]._elm.nativeElement.offsetTop,\r\n        registerMenuInteractionHandler: (type, handler) => {\r\n            let subscription;\r\n            if (type === 'MDCSimpleMenu:selected')\r\n                subscription = this._menu.pick.subscribe(evt => {\r\n                    handler(this.createEvent(type, {index: evt.index}));\r\n                    this._onTouched();\r\n                });\r\n            else if (type === 'MDCSimpleMenu:cancel')\r\n                subscription = this._menu.cancel.subscribe(evt => {\r\n                    handler(this.createEvent(type, {}));\r\n                    this._onTouched();\r\n                });\r\n            else\r\n                throw new Error('Unsupported event type: ' + type);\r\n            this._registry.registerUnlisten(type, handler, () => {subscription.unsubscribe(); });\r\n        },\r\n        deregisterMenuInteractionHandler: (type, handler) => {\r\n            this._registry.unlisten(type, handler);\r\n        },\r\n        notifyChange: () => {\r\n            let idx = this.foundation.getSelectedIndex();\r\n            this._value = (idx == -1) ? null : this._items[idx].value;\r\n            this.valueChange.emit(this._value);\r\n            this._onChange(this._value);\r\n        },\r\n        getWindowInnerHeight: () => window.innerHeight,\r\n    };\r\n    private foundation: {\r\n        init(),\r\n        destroy(),\r\n        getSelectedIndex(),\r\n        setSelectedIndex(index: number),\r\n        isDisabled(),\r\n        setDisabled(disabled: boolean),\r\n        resize()\r\n    } = new MDCSelectFoundation(this.mdcAdapter);\r\n\r\n    constructor(private _elm: ElementRef, private _rndr: Renderer2, private _registry: MdcEventRegistry) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (!this._menu || !this._menu._list)\r\n            throw new Error('mdcSelect requires an embedded mdcMenu and mdcList');\r\n        \r\n        // This style is needed for layout (size detection) of the select box,\r\n        // but not yet available from the HostBinding in ngAfterContentInit:\r\n        this._elm.nativeElement.classList.add(CLASS_SELECT);\r\n\r\n        if (!this._elm.nativeElement.hasAttribute('tabindex'))\r\n            // unless overridden by another tabIndex, we want icon-toggles to\r\n            // participate in tabbing (the foundation will remove the tabIndex\r\n            // when the icon-toggle is disabled):\r\n            this._elm.nativeElement.tabIndex = 0;\r\n        \r\n        this._menu._listFunction = MdcListFunction.select;\r\n\r\n        this.foundation.init();\r\n        this._initialized = true;\r\n\r\n        if (this._value)\r\n            this.updateIndexFromValue();\r\n        // when the list items change, the index might be affected based on the currently selected value:\r\n        this._menu._list._items.changes.pipe(takeUntil(this.onDestroy$)).subscribe(() => {\r\n            this.updateIndexFromValue();\r\n        });\r\n\r\n        if (this._disabled)\r\n            this.foundation.setDisabled(this._disabled);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.onDestroy$.next();\r\n        this.onDestroy$.complete();\r\n        this.foundation.destroy();\r\n    }\r\n\r\n    private get _items() {\r\n        return this._menu._list._items.toArray();\r\n    }\r\n\r\n    private get _menuEl() {\r\n        return this._menu._elm.nativeElement;\r\n    }\r\n\r\n    private updateIndexFromValue(emit = true, onchanges = true) {\r\n        if (this._initialized) {\r\n            let index = this._items.map(i => i.value).indexOf(this._value);\r\n            let newValue = index === -1 ? null : this._value;\r\n            if (index !== this.foundation.getSelectedIndex()) // otherwise setSelectedIndex(-1) may remove the text while we don't want that\r\n                this.foundation.setSelectedIndex(index);\r\n            if (this._value !== newValue) {\r\n                this._value = newValue;\r\n                if (emit)\r\n                    this.valueChange.emit(this._value);\r\n                if (onchanges)\r\n                    this._onChange(this._value);\r\n            }\r\n        }\r\n    }\r\n\r\n    private createEvent(type: string, details: any) {\r\n        if (typeof CustomEvent === 'function')\r\n            return new CustomEvent(type, {detail: details});\r\n        else {\r\n            let result = document.createEvent('CustomEvent');\r\n            result.initCustomEvent(type, false, false, details);\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /** @docs-private */\r\n    writeValue(obj: any) {\r\n        this._value = obj;\r\n        this.updateIndexFromValue(true, false);\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnChange(onChange: (value: any) => void) {\r\n        this._onChange = onChange;\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnTouched(onTouched: () => any) {\r\n        this._onTouched = onTouched;\r\n    }\r\n\r\n    /**\r\n     * Property for the chosen value of the select control. The value that each option represents\r\n     * can be set with the <code>value</code> option on the <code>MdcListItemDirective</code>\r\n     * that represents that choice. Note that when an <code>mdcSelect</code> is used as a FormControl,\r\n     * it's also possible to bind to <code>ngModel</code> instead of <code>value</code>.\r\n     */\r\n    @Input() get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: any) {\r\n        this._value = value;\r\n        this.updateIndexFromValue();\r\n    }\r\n\r\n    /**\r\n     * When this input is defined and does not have value false, the select control will be disabled.\r\n     */\r\n    @Input() get disabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        let newValue = asBoolean(value);\r\n        if (newValue !== this._disabled) {\r\n            this._disabled = newValue;\r\n            if (this._initialized)\r\n                this.foundation.setDisabled(newValue);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for adding Angular Forms (<code>ControlValueAccessor</code>) behavior to an\r\n * <code>MdcSelectDirective</code>. Allows the use of the Angular Forms API with\r\n * select inputs, e.g. binding to <code>[(ngModel)]</code>, form validation, etc.\r\n */\r\n@Directive({\r\n    selector: '[mdcSelect][formControlName]:not(select),[mdcSelect][formControl]:not(select),[mdcSelect][ngModel]:not(select)',\r\n    providers: [\r\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MdcFormsSelectDirective), multi: true}\r\n    ]\r\n})\r\nexport class MdcFormsSelectDirective implements ControlValueAccessor {\r\n    constructor(@Self() private mdcSelect: MdcSelectDirective) {\r\n    }\r\n\r\n    /** @docs-private */\r\n    writeValue(obj: any) {\r\n        this.mdcSelect.writeValue(obj);\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnChange(onChange: (value: any) => void) {\r\n        this.mdcSelect.registerOnChange(onChange);\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnTouched(onTouched: () => any) {\r\n        this.mdcSelect.registerOnTouched(onTouched);\r\n    }\r\n\r\n    /** @docs-private */\r\n    setDisabledState(disabled: boolean) {\r\n        this.mdcSelect.disabled = disabled;\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for a 'Select Control' based on the native HTML <code>select</code>\r\n * element. This directive may provide better usability then the <code>MdcSelectDirective</code>\r\n * on mobile devices. For tablets and desktop, the standard <code>MdcSelectDirective</code>\r\n * is recommended.\r\n * When this directive is used, the standard HTML <code>option</code> and <code>optgroup</code>\r\n * elements must be used to define the choices. No additional directives are needed.\r\n */\r\n@Directive({\r\n    selector: 'select[mdcSelect]:not([multiple])'\r\n})\r\nexport class MdcSelectNativeDirective {\r\n    @HostBinding('class.' + CLASS_SELECT) _cls = true;\r\n}\r\n\r\n/**\r\n * Directive for an option inside a mult-selection 'Select Control'\r\n * using <code>MdcSelectMultipleNativeDirective</code>.\r\n */\r\n@Directive({\r\n    selector: 'option[mdcSelectOption]'\r\n})\r\nexport class MdcSelectOptionNativeDirective {\r\n    @HostBinding('class.mdc-list-item') _cls = false;\r\n}\r\n\r\n/**\r\n * Directive for an optgroup inside a mult-selection 'Select Control'\r\n * using <code>MdcSelectMultipleNativeDirective</code>.\r\n */\r\n@Directive({\r\n    selector: 'optgroup[mdcSelectGroup]'\r\n})\r\nexport class MdcSelectGroupNativeDirective {\r\n    @HostBinding('class.mdc-list-group') _cls = false;\r\n}\r\n\r\n/**\r\n * Directive for a mult-selection 'Select Control' based on the native HTML <code>select[multiple]</code>\r\n * element.\r\n * When this directive is used, the standard HTML <code>option</code> and <code>optgroup</code>\r\n * elements must be used to define the choices. Each option should be annotated with an\r\n * <code>MdcSelectOptionNativeDirective</code>, and each <code>optgroup</code> with an\r\n * <code>MdcSelectGroupNativeDirective</code>.\r\n * Option dividers can be created as follows:\r\n * <code>&lt;option mdcListDivider&gt;&lt;/option&gt;</code>.\r\n */\r\n@Directive({\r\n    selector: 'select[mdcSelect][multiple]'\r\n})\r\nexport class MdcSelectMultipleNativeDirective implements AfterContentInit {\r\n    @HostBinding('class.mdc-multi-select') _cls1 = true;\r\n    @HostBinding('class.mdc-list') _cls2 = true;\r\n    @ContentChildren(MdcSelectOptionNativeDirective, {descendants: true}) private options: QueryList<MdcSelectOptionNativeDirective>;\r\n    @ContentChildren(MdcSelectGroupNativeDirective, {descendants: true}) private groups: QueryList<MdcSelectGroupNativeDirective>;\r\n\r\n    ngAfterContentInit() {\r\n        this.groups.forEach(group => group._cls = true);\r\n        this.options.forEach(option => option._cls = true);\r\n        this.groups.changes.subscribe(() => {\r\n            this.groups.forEach(group => group._cls = true);\r\n        });\r\n        this.options.changes.subscribe(() => {\r\n            this.options.forEach(option => option._cls = true);\r\n        });\r\n    }\r\n}","import { AfterContentInit, AfterViewInit, Directive, ElementRef, EventEmitter, forwardRef,\r\n    HostBinding, Input, OnChanges, OnDestroy, Output, Renderer2, Self, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { MDCSliderFoundation, strings } from '@material/slider';\r\nimport { MdcSliderAdapter } from './mdc.slider.adapter';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\ninterface MdcSliderFoundationInterface {\r\n    init: () => void,\r\n    destroy: () => void,\r\n    setupTrackMarker(),\r\n    layout(),\r\n    getValue(),\r\n    setValue(value: number),\r\n    getMax(): number,\r\n    setMax(max: number),\r\n    getMin(): number,\r\n    setMin(min: number),\r\n    getStep(): number,\r\n    setStep(step: number),\r\n    isDisabled(): boolean,\r\n    setDisabled(disabled: boolean),\r\n}\r\n\r\n/**\r\n * Directive for creating a Material Design slider input.\r\n * (Modelled after the <code>&lt;input type=\"range\"/&gt;</code> element).\r\n * The slider is fully accessible. The current implementation\r\n * will add and manage all DOM child elements that are required for the wrapped\r\n * <code>mdc-slider</code> component.\r\n * Future implementations will also support supplying (customized)\r\n * DOM children.\r\n */\r\n@Directive({\r\n    selector: '[mdcSlider]'\r\n})\r\nexport class MdcSliderDirective implements AfterContentInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @HostBinding('class.mdc-slider') _cls = true;\r\n    @HostBinding('attr.role') _role: string = 'slider';\r\n    /**\r\n     * Event emitted when the value changes. The value may change because of user input,\r\n     * or as a side affect of setting new min, max, or step values.\r\n     */\r\n    @Output() valueChange: EventEmitter<number> = new EventEmitter();\r\n    /**\r\n     * Event emitted when the min range value changes. This may happen as a side effect\r\n     * of setting a new max value (when the new max is smaller than the old min).\r\n     */\r\n    @Output() minValueChange: EventEmitter<number> = new EventEmitter();\r\n    /**\r\n     * Event emitted when the max range value changes. This may happen as a side effect\r\n     * of setting a new min value (when the new min is larger than the old max).\r\n     */\r\n    @Output() maxValueChange: EventEmitter<number> = new EventEmitter();\r\n    /**\r\n     * Event emitted when the step value changes. This may happen as a side effect\r\n     * of making the slider discrete.\r\n     */\r\n    @Output() stepValueChange: EventEmitter<number> = new EventEmitter();\r\n    private _initialized = false;\r\n    private _elmThumbCntr: HTMLElement;\r\n    private _elmSliderPin: HTMLElement;\r\n    private _elmValueMarker: HTMLElement;\r\n    private _elmTrack: HTMLElement;\r\n    private _elmTrackMarkerCntr: HTMLElement;\r\n    private _reinitTabIndex: number;\r\n    private _onChange: (value: any) => void = (value) => {};\r\n    private _onTouched: () => any = () => {};\r\n    private _discrete = false;\r\n    private _markers = false;\r\n    private _disabled = false;\r\n    private _value = 0;\r\n    private _min = 0;\r\n    private _max = 100;\r\n    private _step = 0;\r\n    private _lastWidth: number;\r\n    // works around bug https://github.com/material-components/material-components-web/issues/1429:\r\n    private _interactionHandlers: {type: string, handler: EventListener}[] = [];\r\n\r\n    private mdcAdapter: MdcSliderAdapter = {\r\n        hasClass: (className: string) => {\r\n            if (className === 'mdc-slider--discrete')\r\n                return this._discrete;\r\n            if (className === 'mdc-slider--display-markers')\r\n                return this._markers;\r\n            return this._root.nativeElement.classList.contains(className);\r\n        },\r\n        addClass: (className: string) => {\r\n            this._rndr.addClass(this._root.nativeElement, className);\r\n        },\r\n        removeClass: (className: string) => {\r\n            this._rndr.removeClass(this._root.nativeElement, className);\r\n        },\r\n        getAttribute: (name: string) => this._root.nativeElement.getAttribute(name),\r\n        setAttribute: (name: string, value: string) => {this._rndr.setAttribute(this._root.nativeElement, name, value); },\r\n        removeAttribute: (name: string) => {this._rndr.removeAttribute(this._root.nativeElement, name); },\r\n        computeBoundingRect: () => this._root.nativeElement.getBoundingClientRect(),\r\n        getTabIndex: () => this._root.nativeElement.tabIndex,\r\n        registerInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.listen(this._rndr, type, handler, this._root);\r\n            this._interactionHandlers.push({type: type, handler: handler});\r\n        },\r\n        deregisterInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.unlisten(type, handler);\r\n            for (let i = 0; i != this._interactionHandlers.length; ++i) {\r\n                let handlerInfo = this._interactionHandlers[i];\r\n                if (handlerInfo.type === type && handlerInfo.handler === handler) {\r\n                    this._interactionHandlers.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        registerThumbContainerInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.listenElm(this._rndr, type, handler, this._elmThumbCntr);\r\n        },\r\n        deregisterThumbContainerInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.unlisten(type, handler);\r\n        },\r\n        registerBodyInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.listenElm(this._rndr, type, handler, document.body);\r\n        },\r\n        deregisterBodyInteractionHandler: (type: string, handler: EventListener) => {\r\n            this._registry.unlisten(type, handler);\r\n        },\r\n        registerResizeHandler: (handler: EventListener) => {\r\n            this._registry.listenElm(this._rndr, 'resize', handler, window);\r\n        },\r\n        deregisterResizeHandler: (handler: EventListener) => {\r\n            this._registry.unlisten('resize', handler);\r\n        },\r\n        notifyInput: () => {\r\n            let newValue = this.foundation.getValue();\r\n            if (newValue !== this._value) {\r\n                this._value = newValue;\r\n                this.notifyValueChanged(true);\r\n            }\r\n        },\r\n        notifyChange: () => {\r\n            // currently not handling this event, if there is a usecase for this, please\r\n            // create a feature request.\r\n        },\r\n        setThumbContainerStyleProperty: (propertyName: string, value: string) => {\r\n            this._rndr.setStyle(this._elmThumbCntr, propertyName, value);\r\n        },\r\n        setTrackStyleProperty: (propertyName: string, value: string) => {\r\n            this._rndr.setStyle(this._elmTrack, propertyName, value);\r\n        },\r\n        setMarkerValue: (value: number) => {\r\n            if (this._elmValueMarker)\r\n                this._elmValueMarker.innerText = value != null ? value.toString() : null;\r\n        },\r\n        appendTrackMarkers: (numMarkers: number) => {\r\n            if (this._elmTrackMarkerCntr) {\r\n                const frag = document.createDocumentFragment();\r\n                for (let i = 0; i < numMarkers; i++) {\r\n                    const marker = document.createElement('div');\r\n                    marker.classList.add('mdc-slider__track-marker');\r\n                    frag.appendChild(marker);\r\n                }\r\n                this._rndr.appendChild(this._elmTrackMarkerCntr, frag);\r\n            }\r\n        },\r\n        removeTrackMarkers: () => {\r\n            if (this._elmTrackMarkerCntr)\r\n                while (this._elmTrackMarkerCntr.firstChild)\r\n                    this._rndr.removeChild(this._elmTrackMarkerCntr, this._elmTrackMarkerCntr.firstChild);\r\n        },\r\n        setLastTrackMarkersStyleProperty: (propertyName: string, value: string) => {\r\n            const lastTrackMarker = this._root.nativeElement.querySelector('.mdc-slider__track-marker:last-child');\r\n            if (lastTrackMarker)\r\n                this._rndr.setStyle(lastTrackMarker, propertyName, value);\r\n        },\r\n        isRTL: () => getComputedStyle(this._root.nativeElement).direction === 'rtl'\r\n    };\r\n    private foundation: MdcSliderFoundationInterface = new MDCSliderFoundation(this.mdcAdapter);\r\n\r\n    constructor(private _rndr: Renderer2, private _root: ElementRef, private _registry: MdcEventRegistry) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.initElements();\r\n        this.initDefaultAttributes();\r\n        this.foundation.init();\r\n        this._lastWidth = this.mdcAdapter.computeBoundingRect().width;\r\n        this.updateValues({}, true);\r\n        this._initialized = true;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateLayout();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.foundation.destroy();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this._onChanges(changes);\r\n    }\r\n\r\n    _onChanges(changes: SimpleChanges, callValueAccessorOnValueChange = true) {\r\n        if (this._initialized) {\r\n            if (this.isChanged('isDiscrete', changes) || this.isChanged('hasMarkers', changes)) {\r\n                for (let handlerInfo of this._interactionHandlers)\r\n                    // workaround for uspstream bug: https://github.com/material-components/material-components-web/issues/1429\r\n                    this._registry.unlisten(handlerInfo.type, handlerInfo.handler);\r\n                this._interactionHandlers = [];\r\n                this.foundation.destroy();\r\n                this.initElements();\r\n                this.initDefaultAttributes();\r\n                this.foundation = new MDCSliderFoundation(this.mdcAdapter);\r\n                this.foundation.init();\r\n            }\r\n            this.updateValues(changes, callValueAccessorOnValueChange);\r\n            this.updateLayout();\r\n        }\r\n    }\r\n\r\n    private isChanged(name: string, changes: SimpleChanges) {\r\n        return changes[name] && changes[name].currentValue !== changes[name].previousValue;\r\n    }\r\n\r\n    private initElements() {\r\n        // initElements is also called when changes dictate a new Foundation initialization,\r\n        // in which case we create new child elements:\r\n        while (this._root.nativeElement.firstChild)\r\n            this._rndr.removeChild(this._root.nativeElement, this._root.nativeElement.firstChild);\r\n        const elmTrackContainer = this.addElement(this._root.nativeElement, 'div', ['mdc-slider__track-container']);\r\n        this._elmTrack = this.addElement(elmTrackContainer, 'div', ['mdc-slider__track']);\r\n        if (this._discrete && this._markers)\r\n            this._elmTrackMarkerCntr = this.addElement(elmTrackContainer, 'div', ['mdc-slider__track-marker-container']);\r\n        else\r\n            this._elmTrackMarkerCntr = null;\r\n        this._elmThumbCntr = this.addElement(this._root.nativeElement, 'div', ['mdc-slider__thumb-container']);\r\n        if (this._discrete) {\r\n            this._elmSliderPin = this.addElement(this._elmThumbCntr, 'div', ['mdc-slider__pin']);\r\n            this._elmValueMarker = this.addElement(this._elmSliderPin, 'div', ['mdc-slider__pin-value-marker']);\r\n        } else {\r\n            this._elmSliderPin = null;\r\n            this._elmValueMarker = null;\r\n        }\r\n        const svg = this._rndr.createElement('svg', 'svg');\r\n        this._rndr.addClass(svg, 'mdc-slider__thumb');\r\n        this._rndr.setAttribute(svg, 'width', '21');\r\n        this._rndr.setAttribute(svg, 'height', '21');\r\n        this._rndr.appendChild(this._elmThumbCntr, svg);\r\n        const circle = this._rndr.createElement('circle', 'svg');\r\n        this._rndr.setAttribute(circle, 'cx', '10.5');\r\n        this._rndr.setAttribute(circle, 'cy', '10.5');\r\n        this._rndr.setAttribute(circle, 'r', '7.875');\r\n        this._rndr.appendChild(svg, circle);\r\n        this.addElement(this._elmThumbCntr, 'div', ['mdc-slider__focus-ring']);\r\n    }\r\n\r\n    private addElement(parent: HTMLElement, element: string, classNames: string[]) {\r\n        let child = this._rndr.createElement(element);\r\n        classNames.forEach(name => {\r\n            this._rndr.addClass(child, name);\r\n        });\r\n        this._rndr.appendChild(parent, child);\r\n        return child;\r\n    }\r\n\r\n    private initDefaultAttributes() {\r\n        if (this._reinitTabIndex)\r\n            // value was set the first time we initialized the foundation,\r\n            // so it should also be set when we reinitialize evrything:\r\n            this._root.nativeElement.tabIndex = this._reinitTabIndex;\r\n        else if (!this._root.nativeElement.hasAttribute('tabindex')) {\r\n            // unless overridden by another tabIndex, we want sliders to\r\n            // participate in tabbing (the foundation will remove the tabIndex\r\n            // when the slider is disabled, reset to the initial value when enabled again):\r\n            this._root.nativeElement.tabIndex = 0;\r\n            this._reinitTabIndex = 0;\r\n        } else {\r\n            this._reinitTabIndex = this._root.nativeElement.tabIndex;\r\n        }\r\n    }\r\n\r\n    private updateValues(changes: SimpleChanges, callValueAccessorOnChange: boolean) {\r\n        if (this._discrete && this._step < 1) {\r\n            // See https://github.com/material-components/material-components-web/issues/1426\r\n            // mdc-slider doesn't allow a discrete step value < 1 currently:\r\n            this._step = 1;\r\n            setTimeout(() => {this.stepValueChange.emit(this._step); }, 0);\r\n        } else if (this._step < 0) {\r\n            this._step = 0;\r\n            setTimeout(() => {this.stepValueChange.emit(this._step); }, 0);\r\n        }\r\n        if (this._min > this._max) {\r\n            if (this.isChanged('maxValue', changes)) {\r\n                this._min = this._max;\r\n                setTimeout(() => {this.minValueChange.emit(this._min); }, 0);                \r\n            } else {\r\n                this._max = this._min;\r\n                setTimeout(() => {this.maxValueChange.emit(this._max); }, 0);                                \r\n            }\r\n        }\r\n        let oldValue = changes['value'] ? changes['value'].previousValue : this._value;\r\n        if (this._value < this._min)\r\n            this._value = this._min;\r\n        if (this._value > this._max)\r\n            this._value = this._max;\r\n        // find an order in which the changed values will be accepted by the foundation\r\n        // (since the foundation will throw errors for min > max and other conditions):\r\n        if (this._min < this.foundation.getMax()) {\r\n            this.foundation.setMin(this._min);\r\n            this.foundation.setMax(this._max);\r\n        } else {\r\n            this.foundation.setMax(this._max);\r\n            this.foundation.setMin(this._min);\r\n        }\r\n        this.foundation.setStep(this._step);\r\n        if (this.foundation.isDisabled() !== this._disabled) {\r\n            // without this check, MDCFoundation may remove the tabIndex incorrectly,\r\n            // preventing the slider from getting focus on keyboard commands:\r\n            this.foundation.setDisabled(this._disabled);\r\n        }\r\n        this.foundation.setValue(this._value);\r\n        // value may have changed during setValue(), due to step settings:\r\n        this._value = this.foundation.getValue();\r\n        if (oldValue !== this._value)\r\n            setTimeout(() => {this.notifyValueChanged(callValueAccessorOnChange); }, 0);\r\n    }\r\n\r\n    private updateLayout() {\r\n        let newWidth = this.mdcAdapter.computeBoundingRect().width;\r\n        if (newWidth !== this._lastWidth) {\r\n            this._lastWidth = newWidth;\r\n            this.foundation.layout();\r\n        }\r\n    }\r\n\r\n    private notifyValueChanged(callValueAccessorOnChange: boolean) {\r\n        this.valueChange.emit(this._value);\r\n        if (callValueAccessorOnChange)\r\n            this._onChange(this._value);\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnChange(onChange: (value: any) => void) {\r\n        this._onChange = onChange;\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnTouched(onTouched: () => any) {\r\n        this._onTouched = onTouched;\r\n    }\r\n\r\n    /**\r\n     * Make the slider discrete. Note from the wrapped <code>mdc-slider</code>\r\n     * component:\r\n     * <blockquote>If a slider contains a step value it does not mean that the slider is a \"discrete\" slider.\r\n     * \"Discrete slider\" is a UX treatment, while having a step value is behavioral.</blockquote>\r\n     */\r\n    @Input() @HostBinding('class.mdc-slider--discrete')\r\n    get isDiscrete() {\r\n        return this._discrete;\r\n    }\r\n    \r\n    set isDiscrete(value: any) {\r\n        this._discrete = asBoolean(value);\r\n    }\r\n\r\n    /**\r\n     * Property to enable/disable the display of track markers. Display markers\r\n     * are only supported for discrete sliders. Thus they are only shown when the values\r\n     * of both hasMarkers and isDiscrete equal true.\r\n     */\r\n    @Input() @HostBinding('class.mdc-slider--display-markers')\r\n    get hasMarkers() {\r\n        return this._markers;\r\n    }\r\n\r\n    set hasMarkers(value: any) {\r\n        this._markers = asBoolean(value);\r\n    }\r\n\r\n    /**\r\n     * The current value of the slider.\r\n     */\r\n    @Input() @HostBinding('attr.aria-valuenow')\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: string | number) {\r\n        this._value = +value;\r\n    }\r\n\r\n    /**\r\n     * The minumum allowed value of the slider.\r\n     */\r\n    @Input() @HostBinding('attr.aria-valuemin')\r\n    get minValue() {\r\n        return this._min;\r\n    }\r\n\r\n    set minValue(value: string | number) {\r\n        this._min = +value;\r\n    }\r\n\r\n    /**\r\n     * The maximum allowed value of the slider.\r\n     */\r\n    @Input() @HostBinding('attr.aria-valuemax')\r\n    get maxValue() {\r\n        return this._max;\r\n    }\r\n\r\n    set maxValue(value: string | number) {\r\n        this._max = +value;\r\n    }\r\n\r\n    /**\r\n     * Set the step value (or set to 0 for no step value).\r\n     * The step value can be a floating point value &gt;= 0.\r\n     * The slider will quantize all values to match the step value, except for the minimum and\r\n     * maximum, which can always be set.\r\n     * Discrete sliders are required to have a step value other than 0.\r\n     * Note from the wrapped <code>mdc-slider</code> component:\r\n     * <blockquote>If a slider contains a step value it does not mean that the slider is a \"discrete\" slider.\r\n     * \"Discrete slider\" is a UX treatment, while having a step value is behavioral.</blockquote>\r\n     */\r\n    @Input()\r\n    get stepValue() {\r\n        return this._step;\r\n    }\r\n\r\n    set stepValue(value: string | number) {\r\n        this._step = +value;\r\n    }\r\n\r\n    /**\r\n     * A property to disable the slider.\r\n     */\r\n    @Input() @HostBinding('attr.aria-disabled')\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        this._disabled = asBoolean(value);\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for adding Angular Forms (<code>ControlValueAccessor</code>) behavior to an\r\n * <code>MdcSliderDirective</code>. Allows the use of the Angular Forms API with\r\n * icon toggles, e.g. binding to <code>[(ngModel)]</code>, form validation, etc.\r\n */\r\n@Directive({\r\n    selector: '[mdcSlider][formControlName],[mdcSlider][formControl],[mdcSlider][ngModel]',\r\n    providers: [\r\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MdcFormsSliderDirective), multi: true}\r\n    ]\r\n})\r\nexport class MdcFormsSliderDirective implements ControlValueAccessor {\r\n    constructor(@Self() private mdcSlider: MdcSliderDirective) {\r\n    }\r\n\r\n    /** @docs-private */\r\n    writeValue(obj: any) {\r\n        let change = new SimpleChange(this.mdcSlider.value, +obj, false);\r\n        this.mdcSlider.value = obj;\r\n        this.mdcSlider._onChanges({value: change}, false);\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnChange(onChange: (value: any) => void) {\r\n        this.mdcSlider.registerOnChange(onChange);\r\n    }\r\n\r\n    /** @docs-private */\r\n    registerOnTouched(onTouched: () => any) {\r\n        this.mdcSlider.registerOnTouched(onTouched);\r\n    }\r\n\r\n    /** @docs-private */\r\n    setDisabledState(disabled: boolean) {\r\n        this.mdcSlider.disabled = disabled;\r\n    }\r\n}\r\n","import { Injectable, Optional, Renderer2, SkipSelf } from '@angular/core';\r\nimport { getCorrectEventName } from '@material/animation';\r\nimport { MDCSnackbar, MDCSnackbarFoundation } from '@material/snackbar';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { filter } from 'rxjs/operators/filter';\r\nimport { take } from 'rxjs/operators/take';\r\nimport { MdcSnackbarAdapter } from './mdc.snackbar.adapter';\r\nimport { MdcSnackbarMessage } from './mdc.snackbar.message';\r\n\r\nconst CLASS_ACTIVE = 'mdc-snackbar--active';\r\nconst CLASS_ALIGN_START = 'mdc-snackbar--align-start';\r\n\r\n/**\r\n * This class provides information about a posted snackbar message.\r\n * It can also be used to subscribe to action clicks.\r\n */\r\nexport class MdcSnackbarRef {\r\n    constructor(private _action: Subject<void>) {}\r\n\r\n    /**\r\n     * Subscribe to this observable to be informed when a user clicks the action\r\n     * for the shown snackbar. Note that the observable will complete when the snackbar\r\n     * disappears from screen, so there is no need to unsubscribe.\r\n     */\r\n    action(): Observable<void> {\r\n        return this._action.asObservable();\r\n    }\r\n}\r\n\r\n/**\r\n * A service for showing spec-aligned material design snackbar/toast messages.\r\n */\r\n@Injectable()\r\nexport class MdcSnackbarService {\r\n    private snackbar: MDCSnackbar = null;\r\n    private root: HTMLElement = null;\r\n    private isActive = false;\r\n    private postedMessages = 0;\r\n    private lastActivated = -1;\r\n    private lastDismissed = -1;\r\n    \r\n    private closeMessage: Subject<number> = new Subject<number>();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    private initHtml() {\r\n        if (!this.snackbar) {\r\n            this.root = document.createElement('div');\r\n            this.root.classList.add('mdc-snackbar');\r\n            this.root.setAttribute('aria-live', 'assertive');\r\n            this.root.setAttribute('aria-atomic', 'true');\r\n            this.root.setAttribute('aria-hidden', 'true');\r\n            let snackbarText = document.createElement('div');\r\n            snackbarText.classList.add('mdc-snackbar__text');\r\n            this.root.appendChild(snackbarText);\r\n            let snackbarAction = document.createElement('div');\r\n            snackbarAction.classList.add('mdc-snackbar__action-wrapper');\r\n            this.root.appendChild(snackbarAction);\r\n            let snackbarActionButton = document.createElement('button');\r\n            snackbarActionButton.classList.add('mdc-snackbar__action-button');\r\n            snackbarActionButton.setAttribute('type', 'button');\r\n            snackbarAction.appendChild(snackbarActionButton);\r\n            document.body.appendChild(this.root);\r\n            this.snackbar = new MDCSnackbar(this.root, this.getFoundation(this.root));\r\n        }\r\n    }\r\n\r\n    private getFoundation(root: HTMLElement): MDCSnackbarFoundation {\r\n        const textEl = root.querySelector('.mdc-snackbar__text');\r\n        const buttonEl = <HTMLElement>root.querySelector('.mdc-snackbar__action-button');\r\n        const adapter: MdcSnackbarAdapter = {\r\n            addClass: (className) => {\r\n                if (className === CLASS_ACTIVE)\r\n                    this.activateNext();                \r\n                root.classList.add(className);\r\n            },\r\n            removeClass: (className) => {\r\n                if (className === 'mdc-snackbar--active')\r\n                    this.deactivateLast();\r\n                root.classList.remove(className);\r\n            },\r\n            setAriaHidden: () => root.setAttribute('aria-hidden', 'true'),\r\n            unsetAriaHidden: () => root.removeAttribute('aria-hidden'),\r\n            setActionAriaHidden: () => buttonEl.setAttribute('aria-hidden', 'true'),\r\n            unsetActionAriaHidden: () => buttonEl.removeAttribute('aria-hidden'),\r\n            setActionText: (text) => { buttonEl.textContent = text; },\r\n            setMessageText: (text) => { textEl.textContent = text; },\r\n            setFocus: () => buttonEl.focus(),\r\n            visibilityIsHidden: () => document.hidden,\r\n            registerCapturedBlurHandler: (handler) => buttonEl.addEventListener('blur', handler, true),\r\n            deregisterCapturedBlurHandler: (handler) => buttonEl.removeEventListener('blur', handler, true),\r\n            registerVisibilityChangeHandler: (handler) => document.addEventListener('visibilitychange', handler),\r\n            deregisterVisibilityChangeHandler: (handler) => document.removeEventListener('visibilitychange', handler),\r\n            registerCapturedInteractionHandler: (evt, handler) => document.body.addEventListener(evt, handler, true),\r\n            deregisterCapturedInteractionHandler: (evt, handler) => document.body.removeEventListener(evt, handler, true),\r\n            registerActionClickHandler: (handler) => buttonEl.addEventListener('click', handler),\r\n            deregisterActionClickHandler: (handler) => buttonEl.removeEventListener('click', handler),\r\n            registerTransitionEndHandler: (handler) => root.addEventListener(getCorrectEventName(window, 'transitionend'), handler),\r\n            deregisterTransitionEndHandler: (handler) => root.removeEventListener(getCorrectEventName(window, 'transitionend'), handler)\r\n        }\r\n        return new MDCSnackbarFoundation(adapter);\r\n    }\r\n\r\n    private activateNext() {\r\n        while (this.lastDismissed < this.lastActivated)\r\n            // since this activates a new message, all messages before will logically be closed:\r\n            this.closeMessage.next(++this.lastDismissed);\r\n        ++this.lastActivated;\r\n        this.isActive = true;\r\n    }\r\n\r\n    private deactivateLast() {\r\n        if (this.isActive) {\r\n            ++this.lastDismissed;\r\n            this.isActive = false;\r\n            this.closeMessage.next(this.lastDismissed);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show a snackbar/toast message. If a snackbar message is already showing, the new\r\n     * message will be queued to show after earlier message have been shown.\r\n     * The returned <code>MdcSnackbarRef</code> provides methods to subscribe to action clicks.\r\n     * \r\n     * @param message Queue a snackbar message to show.\r\n     */\r\n    show(message: MdcSnackbarMessage): MdcSnackbarRef {\r\n        // make sure data passes precondition checks in foundation,\r\n        // or our counters will not be right after snackbar.show throws exception:\r\n        if (!message)\r\n            throw new Error('snackbar message called with no data');\r\n        if (!message.message)\r\n            throw new Error('snackbar message is missing the actual message text');            \r\n\r\n        this.initHtml();\r\n        let messageNr = this.postedMessages++;\r\n        let data: any = {\r\n            message: message.message,\r\n            actionText: message.actionText,\r\n            multiline: message.multiline,\r\n            actionOnBottom: message.actionOnBottom,\r\n            timeout: message.timeout\r\n        };\r\n\r\n        // provide a means to subscribe to an action click:\r\n        let action = new Subject<void>();\r\n        if (message.actionText)\r\n            data.actionHandler = function() {action.next(); };\r\n        // make sure the action Subject will complete after the snackbar is removed from screen,\r\n        // so that callers never have to unsubscribe:\r\n        this.closeMessage.asObservable().pipe(\r\n            filter(nr => nr === messageNr),\r\n            take(1)\r\n        ).subscribe(nr => {\r\n            action.complete();\r\n        });\r\n\r\n        // show the actual snackbar:\r\n        this.snackbar.show(data);\r\n\r\n        return new MdcSnackbarRef(action);\r\n    }\r\n\r\n    /**\r\n     * Set this property to true to show snackbars start-aligned instead of center-aligned. Desktop and tablet only.\r\n     */\r\n    get startAligned(): boolean {\r\n        return this.snackbar ? this.root.classList.contains(CLASS_ALIGN_START) : false;\r\n    }\r\n\r\n    set startAligned(value: boolean) {\r\n        this.initHtml();\r\n        if (value)\r\n            this.root.classList.add(CLASS_ALIGN_START);\r\n        else\r\n            this.root.classList.remove(CLASS_ALIGN_START);\r\n    }\r\n\r\n    /**\r\n     * By default the snackbar will be dimissed when the user presses the action button.\r\n     * If you want the snackbar to remain visible until the timeout is reached (regardless of\r\n     * whether the user pressed the action button or not) you can set the dismissesOnAction\r\n     * property to false.\r\n     */\r\n    get dismissesOnAction(): boolean {\r\n        return this.snackbar ? this.snackbar.dismissesOnAction : true;\r\n    }\r\n\r\n    set dismissesOnAction(value: boolean) {\r\n        this.initHtml();\r\n        this.snackbar.dismissesOnAction = value;\r\n    }\r\n}\r\n\r\n/** @docs-private */\r\nexport function MDC_SNACKBAR_PROVIDER_FACTORY(parent: MdcSnackbarService) {\r\n    return parent || new MdcSnackbarService();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MDC_SNACKBAR_PROVIDER = {\r\n    provide: MdcSnackbarService,\r\n    deps: [[new Optional(), new SkipSelf(), MdcSnackbarService]],\r\n    useFactory: MDC_SNACKBAR_PROVIDER_FACTORY\r\n};\r\n","import { AfterContentInit, Component, ContentChild, Directive, ElementRef, EventEmitter, HostBinding, HostListener,\r\n  Input, Optional, Output, Provider, Renderer2, Self, ViewChild, ViewEncapsulation, forwardRef } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { AbstractMdcInput } from '../abstract/abstract.mdc.input';\r\nimport { asBoolean } from '../../utils/value.utils';\r\n\r\n/**\r\n * Directive for the input element of an <code>MdcSwitchDirective</code>.\r\n */\r\n@Directive({\r\n    selector: 'input[mdcSwitchInput][type=checkbox]',\r\n    providers: [{provide: AbstractMdcInput, useExisting: forwardRef(() => MdcSwitchInputDirective) }]\r\n})\r\nexport class MdcSwitchInputDirective extends AbstractMdcInput {\r\n    @HostBinding('class.mdc-switch__native-control') _cls = true;\r\n    private _id: string;\r\n    private _disabled = false;\r\n\r\n    constructor(public _elm: ElementRef, @Optional() @Self() public _cntr: NgControl) {\r\n        super();\r\n    }\r\n\r\n    /** @docs-private */\r\n    @HostBinding()\r\n    @Input() get id() {\r\n        return this._id;\r\n    }\r\n  \r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    /** @docs-private */\r\n    @HostBinding()\r\n    @Input() get disabled() {\r\n        return this._cntr ? this._cntr.disabled : this._disabled;\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        this._disabled = asBoolean(value);\r\n    }\r\n}\r\n\r\n/**\r\n * Directive for creating a Material Design switch component. The switch is driven by an\r\n * underlying native checkbox input, which must use the <code>MdcSwitchInputDirective</code>\r\n * directive.\r\n * The current implementation will add all other required DOM elements (such as the\r\n * background).\r\n * Future implementations will also support supplying (customized) background\r\n * elements.\r\n * </p><p>\r\n * This directive can be used together with an <code>mdcFormField</code> to\r\n * easily position switches and their labels, see\r\n * <a href=\"#/directives/form-field\">mdcFormField</a>.\r\n */\r\n@Directive({\r\n    selector: '[mdcSwitch]'\r\n})\r\nexport class MdcSwitchDirective implements AfterContentInit {\r\n    @HostBinding('class.mdc-switch') _cls = true;\r\n    @ContentChild(MdcSwitchInputDirective) _input: MdcSwitchInputDirective;\r\n\r\n    constructor(private rndr: Renderer2, private root: ElementRef) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.addBackground();\r\n    }\r\n\r\n    private addBackground() {\r\n        let knob = this.rndr.createElement('div');\r\n        this.rndr.addClass(knob, 'mdc-switch__knob');\r\n        let bg = this.rndr.createElement('div');\r\n        this.rndr.addClass(bg, 'mdc-switch__background');\r\n        this.rndr.appendChild(bg, knob);\r\n        this.rndr.appendChild(this.root.nativeElement, bg);\r\n    }\r\n\r\n    @HostBinding('class.mdc-switch--disabled') get _disabled() {\r\n        return this._input == null || this._input.disabled;\r\n    }\r\n}\r\n","import { AfterContentInit, ContentChild, ContentChildren, EventEmitter, forwardRef, Directive, ElementRef,\r\n    HostBinding, HostListener, Input, OnDestroy, Optional, Output, Renderer2, Self } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { MDCTabFoundation } from '@material/tabs';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\nimport { MdcTabAdapter } from './mdc.tab.adapter';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\nexport interface MdcTabChange {\r\n    tab: AbstractMdcTabDirective,\r\n    tabIndex: number\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTabIcon]'\r\n})\r\nexport class MdcTabIconDirective {\r\n    @HostBinding('class.mdc-tab__icon') _hostClass = true;\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTabIconText]'\r\n})\r\nexport class MdcTabIconTextDirective {\r\n    @HostBinding('class.mdc-tab__icon-text') _hostClass = true;\r\n}\r\n\r\nexport class AbstractMdcTabDirective extends AbstractMdcRipple implements OnDestroy, AfterContentInit {\r\n    @HostBinding('class.mdc-tab') _hostClass = true;\r\n    @ContentChild(MdcTabIconDirective) _mdcTabIcon: MdcTabIconDirective;\r\n    @ContentChild(MdcTabIconTextDirective) _mdcTabIconText: MdcTabIconTextDirective;\r\n    @Output() activate: EventEmitter<MdcTabChange> = new EventEmitter();\r\n    protected _adapter: MdcTabAdapter = {\r\n        addClass: (className: string) => this._rndr.addClass(this._root.nativeElement, className),\r\n        removeClass: (className: string) => this._rndr.removeClass(this._root.nativeElement, className),\r\n        registerInteractionHandler: (type: string, handler: EventListener) => this._registry.listen(this._rndr, type, handler, this._root),\r\n        deregisterInteractionHandler: (type: string, handler: EventListener) => this._registry.unlisten(type, handler),\r\n        getOffsetWidth: () => this._root.nativeElement.offsetWidth,\r\n        getOffsetLeft: () => this._root.nativeElement.offsetLeft,\r\n        notifySelected: () => this.activate.emit({tab: this, tabIndex: null})\r\n    };\r\n    _foundation = new MDCTabFoundation(this._adapter);\r\n\r\n    constructor(protected _rndr: Renderer2, protected _root: ElementRef, protected _registry: MdcEventRegistry) {\r\n        super(_root, _rndr, _registry);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.initRipple();\r\n        this._foundation.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyRipple();\r\n        this._foundation.destroy();\r\n    }\r\n\r\n    @HostBinding('class.mdc-tab--with-icon-and-text')\r\n    get _tabWithIconAndText() {\r\n        return this._mdcTabIcon != null && this._mdcTabIconText != null;\r\n    }\r\n\r\n    @HostBinding('class.mdc-tab--active')\r\n    get _active() {\r\n        return this._foundation.isActive();\r\n    }\r\n\r\n    set _active(value: boolean) {\r\n        this._foundation.setActive(value);\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTab]',\r\n    providers: [{provide: AbstractMdcTabDirective, useExisting: forwardRef(() => MdcTabDirective) }]\r\n})\r\nexport class MdcTabDirective extends AbstractMdcTabDirective {\r\n    constructor(rndr: Renderer2, root: ElementRef, registry: MdcEventRegistry) {\r\n        super(rndr, root, registry);\r\n    }\r\n\r\n    @Input()\r\n    get isActive() {\r\n        return this._active;\r\n    }\r\n\r\n    set isActive(value: boolean) {\r\n        let activate = asBoolean(value);\r\n        if (activate) {\r\n            this._active = true;\r\n            this._adapter.notifySelected();\r\n        }\r\n    }\r\n}\r\n","import { AfterContentInit, ChangeDetectorRef, ContentChild, ContentChildren, EventEmitter, forwardRef, QueryList, Directive, ElementRef,\r\n    HostBinding, HostListener, Input, OnChanges, OnDestroy, Optional, Output, Renderer2, Self } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { takeUntil } from 'rxjs/operators/takeUntil';\r\nimport { NgControl } from '@angular/forms';\r\nimport { NavigationEnd, Router, RouterLink, RouterLinkWithHref } from '@angular/router';\r\nimport { MDCTabFoundation } from '@material/tabs';\r\nimport { MdcTabAdapter } from './mdc.tab.adapter';\r\nimport { AbstractMdcTabDirective } from './mdc.tab.directive';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\n@Directive({\r\n    selector: '[mdcTabRouter]',\r\n    exportAs: 'mdcTabRouter',\r\n    providers: [{provide: AbstractMdcTabDirective, useExisting: forwardRef(() => MdcTabRouterDirective) }]\r\n})\r\nexport class MdcTabRouterDirective extends AbstractMdcTabDirective {\r\n    private onDestroy$: Subject<any> = new Subject();\r\n    @ContentChildren(RouterLink, {descendants: true}) _links: QueryList<RouterLink>;\r\n    @ContentChildren(RouterLinkWithHref, {descendants: true}) _linksWithHrefs: QueryList<RouterLinkWithHref>;\r\n\r\n    constructor(rndr: Renderer2, root: ElementRef, registry: MdcEventRegistry, private router: Router, private cdr: ChangeDetectorRef) {\r\n        super(rndr, root, registry);\r\n        router.events.pipe(takeUntil(this.onDestroy$)).subscribe(s => {\r\n            if (s instanceof NavigationEnd) {\r\n                this.update();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.onDestroy$.next();\r\n        this.onDestroy$.complete();\r\n        super.ngOnDestroy();\r\n    }\r\n\r\n    ngAfterContentInit(): void {\r\n        super.ngAfterContentInit();\r\n        this._links.changes.subscribe(_ => this.update());\r\n        this._linksWithHrefs.changes.subscribe(_ => this.update());\r\n        this.update();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.update();\r\n    }\r\n\r\n    public get isActive() {\r\n        return this._active;\r\n    }\r\n\r\n    private update(): void {\r\n        if (!this._links || !this._linksWithHrefs || !this.router.navigated) return;\r\n        const hasActiveLinks = this.hasActiveLinks();\r\n        const active = this._active;\r\n        if (active !== hasActiveLinks) {\r\n            this._active = hasActiveLinks;\r\n            if (this._active) {\r\n                this._adapter.notifySelected();\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasActiveLinks(): boolean {\r\n        return this._links.some(this.isLinkActive(this.router)) || this._linksWithHrefs.some(this.isLinkActive(this.router));\r\n    }\r\n\r\n    private isLinkActive(router: Router): (link: (RouterLink | RouterLinkWithHref)) => boolean {\r\n        return (link: RouterLink | RouterLinkWithHref) => router.isActive(link.urlTree, false);\r\n    }\r\n}\r\n","import { AfterContentInit, ContentChild, ContentChildren, EventEmitter, forwardRef, QueryList, Directive, ElementRef,\r\n    HostBinding, HostListener, Input, OnDestroy, Optional, Output, Renderer2, Self } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { MDCTabBarFoundation, MDCTabBarScrollerFoundation } from '@material/tabs';\r\nimport { MdcTabBarAdapter } from './mdc.tab.bar.adapter';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\nimport { AbstractMdcTabDirective, MdcTabChange } from './mdc.tab.directive';\r\n\r\nconst CLASS_TAB_BAR = 'mdc-tab-bar';\r\nconst CLASS_INDICATOR = 'mdc-tab-bar__indicator';\r\nconst CLASS_ICONS_BAR = 'mdc-tab-bar--icon-tab-bar';\r\nconst CLASS_ICONS_WITH_TEXT_BAR = 'mdc-tab-bar--icons-with-text';\r\n\r\n@Directive({\r\n    selector: '[mdcTabBar]'\r\n})\r\nexport class MdcTabBarDirective {\r\n    @HostBinding('class.' + CLASS_TAB_BAR) _hostClass = true;\r\n    @HostBinding('class.mdc-tab-bar-scroller__scroll-frame__tabs') _insideScrollFrame = false;\r\n    @ContentChildren(AbstractMdcTabDirective, {descendants: false}) _tabs: QueryList<AbstractMdcTabDirective>;\r\n    @Output() tabChange: EventEmitter<MdcTabChange> = new EventEmitter();\r\n    private _indicator: HTMLElement;\r\n    private _adapter: MdcTabBarAdapter = {\r\n        addClass: (className: string) => this._rndr.addClass(this._el.nativeElement, className),\r\n        removeClass: (className: string) => this._rndr.removeClass(this._el.nativeElement, className),\r\n        bindOnMDCTabSelectedEvent: () => this._listenTabSelected(),\r\n        unbindOnMDCTabSelectedEvent: () => this._unlistenTabSelected(),\r\n        registerResizeHandler: (handler: EventListener) => window.addEventListener('resize', handler),\r\n        deregisterResizeHandler: (handler: EventListener) => window.removeEventListener('resize', handler),\r\n        getOffsetWidth: () => this._el.nativeElement.offsetWidth,\r\n        setStyleForIndicator: (propertyName: string, value: string) => this._rndr.setStyle(this._indicator, propertyName, value),\r\n        getOffsetWidthForIndicator: () => this._indicator.offsetWidth,\r\n        notifyChange: (evtData: {activeTabIndex: number}) => {\r\n            this.tabChange.emit({tab: null, tabIndex: evtData.activeTabIndex});\r\n        },\r\n        getNumberOfTabs: () => this._tabs.length,\r\n        isTabActiveAtIndex: (index: number) => index >= 0 ? this._tabs.toArray()[index]._active : false,\r\n        setTabActiveAtIndex: (index: number, isActive = true) => this._tabs.toArray()[index]._active = isActive,\r\n        isDefaultPreventedOnClickForTabAtIndex: (index: number) => !!this._tabs.toArray()[index]._foundation.preventsDefaultOnClick,\r\n        setPreventDefaultOnClickForTabAtIndex: (index: number, preventDefaultOnClick: boolean) => this._tabs.toArray()[index]._foundation.setPreventDefaultOnClick(preventDefaultOnClick),\r\n        measureTabAtIndex: (index: number) => this._tabs.toArray()[index]._foundation.measureSelf(),\r\n        getComputedWidthForTabAtIndex: (index: number) => this._tabs.toArray()[index]._foundation.getComputedWidth(),\r\n        getComputedLeftForTabAtIndex: (index: number) => this._tabs.toArray()[index]._foundation.getComputedLeft()\r\n    };\r\n    private _subscriptions: Subscription[];\r\n    private _foundation = new MDCTabBarFoundation(this._adapter);\r\n\r\n    constructor(private _rndr: Renderer2, public _el: ElementRef, private registry: MdcEventRegistry) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this._tabs.changes.subscribe(() => {\r\n            if (this._subscriptions)\r\n                // make sure we update the tab change event subscriptions:\r\n                this._listenTabSelected();\r\n        });\r\n        this.addIndicator();\r\n        this._foundation.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._foundation.destroy();\r\n    }\r\n\r\n    private addIndicator() {\r\n        this._indicator = this._rndr.createElement('span');\r\n        this._rndr.addClass(this._indicator, CLASS_INDICATOR);\r\n        this._rndr.appendChild(this._el.nativeElement, this._indicator);\r\n    }\r\n\r\n    private _listenTabSelected() {\r\n        if (this._subscriptions)\r\n            this._unlistenTabSelected();\r\n        this._subscriptions = new Array<Subscription>();\r\n        this._tabs.forEach(tab => {\r\n            this._subscriptions.push(tab.activate.subscribe(event => {\r\n                this._setActive(event.tab, true);\r\n            }));\r\n        });\r\n    }\r\n\r\n    private _unlistenTabSelected() {\r\n        this._subscriptions.forEach(sub => sub.unsubscribe());\r\n        this._subscriptions = null;\r\n    }\r\n\r\n    private _setActive(tab: AbstractMdcTabDirective, notifyChange: boolean) {\r\n        const index = this._tabs.toArray().indexOf(tab);\r\n        this._foundation.switchToTabAtIndex(index, notifyChange);\r\n    }\r\n    \r\n    @HostBinding('class.' + CLASS_ICONS_BAR)\r\n    get _tabBarWithIcon() {\r\n        return this._tabs.length > 0\r\n            && this._tabs.first._mdcTabIcon != null\r\n            && this._tabs.first._mdcTabIconText == null;\r\n    }\r\n\r\n    @HostBinding('class.' + CLASS_ICONS_WITH_TEXT_BAR)\r\n    get _tabBarWithIconAndText() {\r\n        return this._tabs.length > 0\r\n            && this._tabs.first._mdcTabIcon != null\r\n            && this._tabs.first._mdcTabIconText != null;\r\n    }\r\n}\r\n","import { AfterContentInit, ContentChild, ContentChildren, forwardRef, Directive, ElementRef,\r\n    HostBinding, HostListener, Input, OnDestroy, Optional, Output, Renderer2, Self } from '@angular/core';\r\nimport { getCorrectPropertyName } from '@material/animation';\r\nimport { MDCTabBarScrollerFoundation } from '@material/tabs';\r\nimport { AbstractMdcTabDirective } from './mdc.tab.directive';\r\nimport { MdcTabBarScrollerAdapter } from './mdc.tab.bar.scroller.adapter';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\nimport { MdcTabBarDirective } from './mdc.tab.bar.directive';\r\n\r\nconst CLASS_SCROLLER = 'mdc-tab-bar-scroller';\r\nconst CLASS_INDICATOR = 'mdc-tab-bar-scroller__indicator';\r\nconst CLASS_INDICATOR_INNER = 'mdc-tab-bar-scroller__indicator__inner';\r\nconst CLASS_INDICATOR_BACK = 'mdc-tab-bar-scroller__indicator--back';\r\nconst CLASS_INDICATOR_FORWARD = 'mdc-tab-bar-scroller__indicator--forward';\r\nconst CLASS_SCROLLER_FRAME = 'mdc-tab-bar-scroller__scroll-frame';\r\n\r\n@Directive({\r\n    selector: '[mdcTabBarScrollerInner]'\r\n})\r\nexport class MdcTabBarScrollerInnerDirective {\r\n    @HostBinding('class.' + CLASS_INDICATOR_INNER) _hostClass = true;\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTabBarScrollerBack]'\r\n})\r\nexport class MdcTabBarScrollerBackDirective {\r\n    @HostBinding('class.' + CLASS_INDICATOR) _hostClass = true;\r\n    @HostBinding('class.' + CLASS_INDICATOR_BACK) _back = true;\r\n\r\n    constructor(public _el: ElementRef) {\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTabBarScrollerForward]'\r\n})\r\nexport class MdcTabBarScrollerForwardDirective {\r\n    @HostBinding('class.' + CLASS_INDICATOR) _hostClass = true;\r\n    @HostBinding('class.' + CLASS_INDICATOR_FORWARD) _forward = true;\r\n\r\n    constructor(public _el: ElementRef) {\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTabBarScrollerFrame]'\r\n})\r\nexport class MdcTabBarScrollerFrameDirective implements AfterContentInit {\r\n    @HostBinding('class.' + CLASS_SCROLLER_FRAME) _hostClass = true;\r\n    @ContentChild(MdcTabBarDirective) _tabBar: MdcTabBarDirective;\r\n\r\n    constructor(public _el: ElementRef) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (this._tabBar)\r\n            this._tabBar._insideScrollFrame = true;\r\n    }\r\n\r\n    _tabAt(index: number) {\r\n        if (this._tabBar) {\r\n            let tabs = this._tabBar._tabs.toArray();\r\n            if (index >= 0 && index < tabs.length)\r\n                return tabs[index];\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTabBarScroller]'\r\n})\r\nexport class MdcTabBarScrollerDirective implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.' + CLASS_SCROLLER) _hostClass = true;\r\n    @ContentChild(MdcTabBarScrollerBackDirective) _back: MdcTabBarScrollerBackDirective;\r\n    @ContentChild(MdcTabBarScrollerForwardDirective) _forward: MdcTabBarScrollerForwardDirective;\r\n    @ContentChild(MdcTabBarScrollerFrameDirective) _scrollFrame: MdcTabBarScrollerFrameDirective;\r\n    @Input() direction = 'ltr';\r\n    private _adapter: MdcTabBarScrollerAdapter = {\r\n        addClass: (className: string) => this._rndr.addClass(this._el.nativeElement, className),\r\n        removeClass: (className: string) => this._rndr.removeClass(this._el.nativeElement, className),\r\n        eventTargetHasClass: (target: HTMLElement, className: string) => target.classList.contains(className),\r\n        addClassToForwardIndicator: (className: string) => {\r\n            if (this._forward)\r\n                this._rndr.addClass(this._forward._el.nativeElement, className);\r\n        },\r\n        removeClassFromForwardIndicator: (className: string) => {\r\n            if (this._forward)\r\n                this._rndr.removeClass(this._forward._el.nativeElement, className);\r\n        },\r\n        addClassToBackIndicator: (className: string) => {\r\n            if (this._back)\r\n                this._rndr.addClass(this._back._el.nativeElement, className);            \r\n        },\r\n        removeClassFromBackIndicator: (className: string) => {\r\n            if (this._back)\r\n                this._rndr.removeClass(this._back._el.nativeElement, className);\r\n        },\r\n        isRTL: () => this.direction === 'rtl',\r\n        registerBackIndicatorClickHandler: (handler: EventListener) => {\r\n            if (this._back)\r\n                this.registry.listen(this._rndr, 'click', handler, this._back._el);\r\n        },\r\n        deregisterBackIndicatorClickHandler: (handler: EventListener) => {\r\n            if (this._back)\r\n                this.registry.unlisten('click', handler);\r\n        },\r\n        registerForwardIndicatorClickHandler: (handler: EventListener) => {\r\n            if (this._forward)\r\n                this.registry.listen(this._rndr, 'click', handler, this._forward._el);\r\n        },\r\n        deregisterForwardIndicatorClickHandler: (handler: EventListener) => {\r\n            if (this._forward)\r\n                this.registry.unlisten('click', handler);\r\n        },\r\n        registerCapturedInteractionHandler: (evt: string, handler: EventListener) => {\r\n            this.registry.listen(this._rndr, evt, handler, this._el);\r\n        },\r\n        deregisterCapturedInteractionHandler: (evt: string, handler: EventListener) => {\r\n            this.registry.unlisten(evt, handler);\r\n        },\r\n        registerWindowResizeHandler: (handler: EventListener) => window.addEventListener('resize', handler),\r\n        deregisterWindowResizeHandler: (handler: EventListener) => window.removeEventListener('resize', handler),\r\n        getNumberOfTabs: () => {\r\n            if (this._scrollFrame && this._scrollFrame._tabBar)\r\n                return this._scrollFrame._tabBar._tabs.length;\r\n            return 0;\r\n        },\r\n        getComputedWidthForTabAtIndex: (index: number) => this._tabAt(index)._foundation.getComputedWidth(),\r\n        getComputedLeftForTabAtIndex: (index: number) => this._tabAt(index)._foundation.getComputedLeft(),\r\n        getOffsetWidthForScrollFrame: () => {\r\n            if (this._scrollFrame)\r\n                return this._scrollFrame._el.nativeElement.offsetWidth;\r\n            return 0;\r\n        },\r\n        getScrollLeftForScrollFrame: () => {\r\n            if (this._scrollFrame)\r\n                return this._scrollFrame._el.nativeElement.scrollLeft;\r\n            return 0;\r\n        },\r\n        setScrollLeftForScrollFrame: (scrollLeftAmount: number) => {\r\n            if (this._scrollFrame)\r\n                this._rndr.setProperty(this._scrollFrame._el.nativeElement, 'scrollLeft', scrollLeftAmount);\r\n        },\r\n        getOffsetWidthForTabBar: () => {\r\n            if (this._scrollFrame && this._scrollFrame._tabBar)\r\n                return this._scrollFrame._tabBar._el.nativeElement.offsetWidth;\r\n            return 0;\r\n        },\r\n        setTransformStyleForTabBar: (value: string) => {\r\n            if (this._scrollFrame && this._scrollFrame._tabBar)\r\n                this._rndr.setStyle(this._scrollFrame._tabBar._el.nativeElement, getCorrectPropertyName(window, 'transform'), value);\r\n        },\r\n        getOffsetLeftForEventTarget: (target: HTMLElement) => target.offsetLeft,\r\n        getOffsetWidthForEventTarget: (target: HTMLElement) => target.offsetWidth\r\n    }\r\n    private _foundation = new MDCTabBarScrollerFoundation(this._adapter);\r\n\r\n    constructor(private _rndr: Renderer2, private _el: ElementRef, private registry: MdcEventRegistry) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this._foundation.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._foundation.destroy();\r\n    }\r\n\r\n    private _tabAt(index: number) {\r\n        if (this._scrollFrame)\r\n            return this._scrollFrame._tabAt(index);\r\n        return null;\r\n    }\r\n}\r\n","import { AfterContentInit, AfterViewInit, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef, HostBinding,\r\n  HostListener, Input, OnDestroy, OnInit, Optional, Output, Provider, QueryList, Renderer2, Self, ViewChild,\r\n  ViewEncapsulation } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { MDCRipple } from '@material/ripple';\r\nimport { MDCTextFieldFoundation } from '@material/textfield';\r\nimport { MdcTextFieldAdapter } from './mdc.text-field.adapter';\r\nimport { AbstractMdcInput } from '../abstract/abstract.mdc.input';\r\nimport { AbstractMdcLabel } from '../abstract/abstract.mdc.label';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { AbstractMdcRipple } from '../ripple/abstract.mdc.ripple';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\nconst CLASS_BOTTOM_LINE = 'mdc-text-field__bottom-line';\r\n\r\nlet nextId = 1;\r\n\r\n@Directive({\r\n    selector: 'input[mdcTextFieldInput], textarea[mdcTextFieldInput]',\r\n    providers: [{provide: AbstractMdcInput, useExisting: forwardRef(() => MdcTextFieldInputDirective) }]\r\n})\r\nexport class MdcTextFieldInputDirective extends AbstractMdcInput implements OnInit {\r\n    _onChange = (value) => {};\r\n    private _id: string;\r\n    private _type = 'text';\r\n    private _disabled = false;\r\n    private _required = false;\r\n    private cachedId: string;\r\n    _focused = false;\r\n    @HostBinding('class.mdc-text-field__input') _hostClass = true;\r\n\r\n    constructor(public _elm: ElementRef, private renderer: Renderer2, @Optional() @Self() public _cntr: NgControl) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Force setter to be called in case id was not specified.\r\n        this.id = this.id;\r\n        if (this._cntr) {\r\n            this._cntr.valueChanges.subscribe(value => {\r\n                this._onChange(value);\r\n            });\r\n        }\r\n    }\r\n\r\n    @HostBinding()\r\n    @Input() get id() {\r\n        return this._id;\r\n    }\r\n  \r\n    set id(value: string) {\r\n        this._id = value || this._newId();\r\n    }\r\n\r\n    @HostBinding()\r\n    @Input() get disabled() {\r\n        return this._cntr ? this._cntr.disabled : this._disabled;\r\n    }\r\n\r\n    set disabled(value: any) {\r\n        this._disabled = value != null && `${value}` !== 'false';\r\n    }\r\n\r\n    @HostBinding()\r\n    @Input() get required() {\r\n        return this._required;\r\n    }\r\n    \r\n    set required(value: any) {\r\n        this._required = value != null && `${value}` !== 'false';\r\n    }\r\n\r\n    @Input() get type() {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._type = value || 'text';\r\n\r\n        // Angular Input is not automatically set on the native input element:\r\n        if (!this._isTextarea()) {\r\n            try {\r\n                this.renderer.setProperty(this._elm.nativeElement, 'type', this._type);\r\n            } catch (e) {\r\n                (<any>this.renderer).setElementProperty(this._elm.nativeElement, 'type', this._type);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @docs-private */\r\n    get value() {\r\n        return this._elm.nativeElement.value;\r\n    }\r\n\r\n    /** @docs-private */\r\n    set value(value: string) {\r\n        this._elm.nativeElement.value = value;\r\n        this._onChange(value);\r\n    }\r\n\r\n    /** @docs-private */\r\n    focus() {\r\n        this._elm.nativeElement.focus();\r\n    }\r\n\r\n    @HostListener('focus') _onFocus() {\r\n        this._focused = true;\r\n    }\r\n\r\n    @HostListener('blur') _onBlur() {\r\n       this._focused = false;\r\n    }\r\n\r\n    @HostListener('input') _onInput() {\r\n        // Having a listener for input changes forces a change detection for each 'input' event.\r\n        // Necessary in some edge cases.\r\n    }\r\n\r\n    /** @docs-private */\r\n    get valid(): boolean {\r\n        return this._cntr ? this._cntr.valid : (this._elm.nativeElement as HTMLInputElement).validity.valid;\r\n    }\r\n\r\n    _isBadInput() {\r\n        return (this._elm.nativeElement as HTMLInputElement).validity.badInput;\r\n    }\r\n\r\n    _isTextarea() {\r\n        return this._elm.nativeElement.nodeName.toLowerCase() === 'textarea';\r\n    }\r\n\r\n    _newId(): string {\r\n        this.cachedId = this.cachedId || `mdc-input-${nextId++}`;\r\n        return this.cachedId;\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTextFieldIcon]'\r\n})\r\nexport class MdcTextFieldIconDirective {\r\n    @HostBinding('class.mdc-text-field__icon') _cls = true;\r\n\r\n    constructor(public _el: ElementRef) {\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: 'label[mdcTextFieldLabel]',\r\n    providers: [{provide: AbstractMdcLabel, useExisting: forwardRef(() => MdcTextFieldLabelDirective) }]\r\n})\r\nexport class MdcTextFieldLabelDirective extends AbstractMdcLabel {\r\n    /** @docs-private */\r\n    @HostBinding() for: string;\r\n    @HostBinding('class.mdc-text-field__label') _cls = true;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n        super();\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTextFieldHelptext]',\r\n    exportAs: 'mdcHelptext'\r\n})\r\nexport class MdcTextFieldHelptextDirective {\r\n    @HostBinding('class.mdc-text-field-helptext') _cls = true;\r\n    @HostBinding('class.mdc-text-field-helptext--validation-msg') _isValidation = false;\r\n    @HostBinding('class.mdc-text-field-helptext--persistent') _isPersistent = false;\r\n    @Input() forceShow = false; // TODO boolean coercion\r\n\r\n    constructor(public _elm: ElementRef) {\r\n    }\r\n\r\n    @Input() set isValidation(value: boolean) {\r\n        this._isValidation = value != null && `${value}` !== 'false';\r\n    }\r\n\r\n    @Input() set isPersistent(value: boolean) {\r\n        this._isPersistent = value != null && `${value}` !== 'false';\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[mdcTextField]',\r\n    providers: [{provide: AbstractMdcRipple, useExisting: forwardRef(() => MdcTextFieldDirective) }]\r\n})\r\nexport class MdcTextFieldDirective extends AbstractMdcRipple implements AfterContentInit, OnDestroy {\r\n    @HostBinding('class.mdc-text-field') _cls = true;\r\n    @ContentChild(MdcTextFieldIconDirective) _icon: MdcTextFieldIconDirective;\r\n    @ContentChild(MdcTextFieldInputDirective) _input: MdcTextFieldInputDirective;\r\n    @ContentChild(MdcTextFieldLabelDirective) _label: MdcTextFieldLabelDirective;\r\n    @ContentChildren('label', {descendants: true, read: ElementRef}) _labels: QueryList<ElementRef>;\r\n    @Input() helptext: MdcTextFieldHelptextDirective;\r\n    private _initialized = false;\r\n    private _box = false;\r\n    private _dense = false;\r\n    private _bottomLineElm: HTMLElement = null;\r\n    private valid: boolean = null;\r\n    private mdcAdapter: MdcTextFieldAdapter = {\r\n        addClass: (className: string) => {\r\n            this.renderer.addClass(this.root.nativeElement, className);\r\n        },\r\n        removeClass: (className: string) => {\r\n            this.renderer.removeClass(this.root.nativeElement, className);\r\n        },\r\n        addClassToLabel: (className: string) => {\r\n            if (this._label)\r\n                this.renderer.addClass(this._label._elm.nativeElement, className);\r\n        },\r\n        removeClassFromLabel: (className: string) => {\r\n            if (this._label)\r\n                this.renderer.removeClass(this._label._elm.nativeElement, className);\r\n        },\r\n        setIconAttr: (name: string, value: string) => {\r\n            if (this._icon)\r\n                this._icon._el.nativeElement.setAttribute(name, value);\r\n        },\r\n        eventTargetHasClass: (target: HTMLElement, className: string) => {\r\n            return target.classList.contains(className);\r\n        },\r\n        registerTextFieldInteractionHandler: (evtType: string, handler: EventListener) => {\r\n            this.registry.listen(this.renderer, evtType, handler, this.root);\r\n        },\r\n        deregisterTextFieldInteractionHandler: (evtType: string, handler: EventListener) => {\r\n            this.registry.unlisten(evtType, handler);\r\n        },\r\n        notifyIconAction: () => {\r\n            // TODO\r\n        },\r\n        addClassToBottomLine: (className: string) => {\r\n            if (this._bottomLineElm)\r\n                this.renderer.addClass(this._bottomLineElm, className);\r\n        },\r\n        removeClassFromBottomLine: (className: string) => {\r\n            if (this._bottomLineElm)\r\n                this.renderer.removeClass(this._bottomLineElm, className);\r\n        },\r\n        addClassToHelptext: (className: string) => {\r\n            if (this.helptext)\r\n                this.renderer.addClass(this.helptext._elm.nativeElement, className);\r\n        },\r\n        removeClassFromHelptext: (className: string) => {\r\n            if (this.helptext)\r\n                this.renderer.removeClass(this.helptext._elm.nativeElement, className);\r\n        },\r\n        helptextHasClass: (className: string) => {\r\n            if (this.helptext)\r\n                return this.helptext._elm.nativeElement.classList.contains(className);\r\n        },\r\n        registerInputInteractionHandler: (evtType: string, handler: EventListener) => {\r\n            if (this._input)\r\n                this.registry.listen(this.renderer, evtType, handler, this._input._elm);\r\n        },\r\n        deregisterInputInteractionHandler: (evtType: string, handler: EventListener) => {\r\n            this.registry.unlisten(evtType, handler);\r\n        },\r\n        registerTransitionEndHandler: (handler: EventListener) => {\r\n            if (this._bottomLineElm)\r\n                this.registry.listenElm(this.renderer, 'transitionend', handler, this._bottomLineElm);\r\n        },\r\n        deregisterTransitionEndHandler: (handler: EventListener) => {\r\n            this.registry.unlisten('transitionend', handler);\r\n        },\r\n        setBottomLineAttr: (attr: string, value: string) => {\r\n            if (this._bottomLineElm)\r\n                this._bottomLineElm.setAttribute(attr, value);\r\n        },\r\n        setHelptextAttr: (name: string, value: string) => {\r\n            if (this.helptext)\r\n                this.renderer.setAttribute(this.helptext._elm.nativeElement, name, value);\r\n        },\r\n        removeHelptextAttr: (name: string) => {\r\n            if (this.helptext)\r\n                this.renderer.removeAttribute(this.helptext._elm.nativeElement, name);\r\n        },\r\n        getNativeInput: () => {\r\n            return {\r\n                checkValidity: () => this.valid == null ? this._input.valid : !!this.valid,\r\n                value: this._input.value,\r\n                disabled: this._input.disabled,\r\n                badInput: this._input._isBadInput()\r\n            };\r\n        }\r\n    };\r\n    private foundation: {\r\n        init: Function,\r\n        destroy: Function,\r\n        useCustomValidityChecking_: boolean,\r\n        setValid(isValid: boolean),\r\n        changeValidity_(isValid: boolean)\r\n    } = new MDCTextFieldFoundation(this.mdcAdapter);\r\n\r\n    constructor(private renderer: Renderer2, private root: ElementRef, private registry: MdcEventRegistry) {\r\n        super(root, renderer, registry);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (this._label && this._input && !this._label.for)\r\n            this._label.for = this._input.id;\r\n        this._initialized = true;\r\n        this._bottomLineElm = this.renderer.createElement('div');\r\n        this.renderer.addClass(this._bottomLineElm, CLASS_BOTTOM_LINE);\r\n        this.renderer.appendChild(this.root.nativeElement, this._bottomLineElm);\r\n        this.initBox();\r\n        this.foundation.init();\r\n        // TODO: we should actually reassign this if mdcInput changes, eg via ngContentChanges hook\r\n        if (this._input)\r\n            this._input._onChange = (value) => {\r\n                if (this._input && !this._input._focused) {\r\n                    // programmatic changes to the input value are not seen by the foundation,\r\n                    // but some states should be updated with the new value:\r\n                    if (value == null || value.toString().length === 0)\r\n                        this.mdcAdapter.removeClassFromLabel('mdc-text-field__label--float-above');\r\n                    else\r\n                        this.mdcAdapter.addClassToLabel('mdc-text-field__label--float-above');\r\n                }\r\n            }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyRipple();\r\n        this.foundation.destroy();\r\n        this._input._onChange = (value) => {};\r\n    }\r\n\r\n    private initBox() {\r\n        if (this._box != !!this.isRippleInitialized()) {\r\n            if (this._box)\r\n                this.initRipple();\r\n            else\r\n                this.destroyRipple();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * When binding to 'isValid', the value will determine the valid state of the input,\r\n     * instead of it being managed by the underlying input element directly.\r\n     * For most use cases this is not needed. When the input/textarea is an ngControl,\r\n     * the mdcTextField is already aware of that, and is already using the 'valid'\r\n     * property of that control.\r\n     * <p>\r\n     * However, in some specific cases, binding to isValid can help. Example:\r\n     * When you want the mdcTextField to go to  'invalid' state only when the underlying\r\n     * control is invalid AND that control is touched, you can bind as follows:\r\n     * <code>isValid=\"myControl.valid || !myControl.touched\"</code>.\r\n     */\r\n    @Input() set isValid(value: boolean) {\r\n        if (value == null) {\r\n            this.valid = null; // reset to null, validity now managed by the input control.\r\n            this.foundation.useCustomValidityChecking_ = false;\r\n            this.foundation.changeValidity_(this.mdcAdapter.getNativeInput().checkValidity());\r\n        } else if (value !== this.valid) {\r\n            this.valid = asBoolean(value);\r\n            this.foundation.setValid(this.valid);\r\n        }\r\n    }\r\n\r\n    @HostBinding('class.mdc-text-field--textarea') get _textArea(): boolean {\r\n        return this._input._isTextarea();\r\n    }\r\n\r\n    @HostBinding('class.mdc-text-field--box') @Input()\r\n    get boxed() {\r\n        return this._box;\r\n    }\r\n\r\n    @HostBinding('class.mdc-text-field--with-leading-icon') get _leadingIcon(): boolean {\r\n        return this._icon && !this._icon._el.nativeElement.previousElementSibling;\r\n    }\r\n\r\n    @HostBinding('class.mdc-text-field--with-trailing-icon') get _trailingIcon(): boolean {\r\n        return this._icon && this._icon._el.nativeElement.previousElementSibling;\r\n    }\r\n\r\n    set boxed(val: any) {\r\n        this._box = asBoolean(val);\r\n        this.initBox();\r\n    }\r\n\r\n    @HostBinding('class.mdc-text-field--dense') @Input()\r\n    get dense() {\r\n        return this._dense;\r\n    }\r\n\r\n    set dense(val: any) {\r\n        this._dense = asBoolean(val);\r\n    }\r\n}\r\n","import { AfterContentInit, AfterViewInit, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\r\n  HostBinding, HostListener, Input, OnDestroy, Optional, Output, Provider, Renderer2, Self, ViewChild,\r\n  ViewEncapsulation } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { MDCToolbar, MDCToolbarFoundation, util } from '@material/toolbar';\r\nimport { MdcToolbarAdapter } from './mdc.toolbar.adapter';\r\nimport { asBoolean } from '../../utils/value.utils';\r\nimport { MdcEventRegistry } from '../../utils/mdc.event.registry';\r\n\r\n/**\r\n * A directive for a toolbar row. The content of a toolbar should always be embedded\r\n * in toolbar rows. So this directive should always be used as a direct child of an\r\n * <code>MdcToolbarDirective</code>. Multiple rows are allowed, which rows are visible\r\n * depends on the style of the toolbar, and the scroll position of the content of\r\n * the page.\r\n */\r\n@Directive({\r\n    selector: '[mdcToolbarRow]'\r\n})\r\nexport class MdcToolbarRowDirective {\r\n    @HostBinding('class.mdc-toolbar__row') _hostClass = true;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n    }\r\n}\r\n\r\n/**\r\n * A directive for a toolbar section. A toolbar row should always be composed of toolbar sections.\r\n * Thus, this directive should always be used as a direct child of an <code>MdcToolbarRowDirective</code>.\r\n * Multiple sections, with different alignment options, are allowed per row.\r\n */\r\n@Directive({\r\n    selector: '[mdcToolbarSection]'\r\n})\r\nexport class MdcToolbarSectionDirective {\r\n    @HostBinding('class.mdc-toolbar__section') _hostClass = true;\r\n    private _alignEnd = false;\r\n    private _alignStart = false;\r\n    private _shrinkToFit = false;\r\n\r\n    /**\r\n     * Make the section align to the start of the toolbar row (default alignment is to the\r\n     * center).\r\n     */\r\n    @Input() @HostBinding('class.mdc-toolbar__section--align-start') get alignStart() {\r\n        return this._alignStart;\r\n    }\r\n\r\n    set alignStart(val: any) {\r\n        this._alignStart = asBoolean(val);\r\n    }\r\n\r\n    /**\r\n     * Make the section align to the end of the toolbar row (default alignment is to the\r\n     * center).\r\n     */\r\n    @Input() @HostBinding('class.mdc-toolbar__section--align-end') get alignEnd() {\r\n        return this._alignEnd;\r\n    }\r\n\r\n    set alignEnd(val: any) {\r\n        this._alignEnd = asBoolean(val);\r\n    }\r\n\r\n    /**\r\n     * Toolbar sections are laid out using flexbox. Each section will take up an equal amount\r\n     * of space within the toolbar by default. To accomodate very long sections (e.g. a  long title),\r\n     * set <code>shrinkToFit</code> to a value other than false on the other sections in the row.\r\n     */\r\n    @Input() @HostBinding('class.mdc-toolbar__section--shrink-to-fit') get shrinkToFit() {\r\n        return this._shrinkToFit;\r\n    }\r\n\r\n    set shrinkToFit(val: any) {\r\n        this._shrinkToFit = asBoolean(val);\r\n    }\r\n}\r\n\r\n/**\r\n * This directive adds extra styling to toolbar text that represents the title of the toolbar.\r\n * The directive should be a child of an <code>MdcToolbarSectionDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcToolbarTitle]'\r\n})\r\nexport class MdcToolbarTitleDirective {\r\n    @HostBinding('class.mdc-toolbar__title') _hostClass = true;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n    }\r\n}\r\n\r\n/**\r\n * This directive is typically used to style icons placed in the toolbar placed\r\n * on the right hands side. Use <code>MdcToolbarMenuIcon</code> for the 'main'\r\n * icon, usually placed to the left of the menu.\r\n * The directive should be a child of an <code>MdcToolbarSectionDirective</code>.\r\n */\r\n@Directive({\r\n    selector: '[mdcToolbarIcon]'\r\n})\r\nexport class MdcToolbarIcon {\r\n    @HostBinding('class.mdc-toolbar__icon') _hostClass = true;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n    }\r\n}\r\n\r\n/**\r\n * This directive is typically used to style the main toolbar icon, usually placed to\r\n * the left of the toolbar title. For other icons in the toolbar, use\r\n * <code>MdcToolbarIcon</code> instead.\r\n */\r\n@Directive({\r\n    selector: '[mdcToolbarMenuIcon]'\r\n})\r\nexport class MdcToolbarMenuIcon {\r\n    @HostBinding('class.mdc-toolbar__menu-icon') _hostClass = true;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n    }\r\n}\r\n\r\n/**\r\n * For <code>isFixed</code> toolbars, this directive should be put on the page's\r\n * content wrapper element, and the exported directive should be assigned to the\r\n * <code>fixedAdjust</code> property of the <code>MdcToolbarDirective</code>.\r\n * This will make the toolbar aware of the content wrapper, so that the top marging\r\n * can be adjusted based on the style of the toolbar, and the scroll of the content.\r\n */\r\n@Directive({\r\n    selector: '[mdcToolbarFixedAdjust]',\r\n    exportAs: 'mdcFixedAdjust'\r\n})\r\nexport class MdcToolbarFixedAdjustDirective {\r\n    @HostBinding('class.mdc-toolbar-fixed-adjust') _hostClass = true;\r\n\r\n    constructor(public _elm: ElementRef) {\r\n    }\r\n}\r\n\r\n/**\r\n * A directive for creating toolbars. All content inside a toolbar should be\r\n * embedded inside <code>MdcToolbarRowDirective</code> elements.\r\n */\r\n@Directive({\r\n    selector: '[mdcToolbar]'\r\n})\r\nexport class MdcToolbarDirective implements AfterViewInit, OnDestroy {\r\n    @HostBinding('class.mdc-toolbar') _hostClass = true;\r\n    /**\r\n     * Assign a <code>MdcToolbarFixedAdjustDirective</code> put on the main\r\n     * content of the page. Required for <code>isFixed</code> toolbars,\r\n     * to properly layout the toolbar and the content when users scroll.\r\n     */\r\n    @Input() fixedAdjust: MdcToolbarFixedAdjustDirective;\r\n    /**\r\n     * A number between [0, 1] that represents the <em>ratio of flexible space\r\n     * that has already been collapsed divided by the total amount of flexible space</em>\r\n     * for flexible toolbars.\r\n     */\r\n    @Output() expansionRatio = new EventEmitter<number>();\r\n    @ContentChild(MdcToolbarTitleDirective) _title;\r\n    @ContentChild(MdcToolbarRowDirective) _firstRow;\r\n    private _viewport: HTMLElement;\r\n    private _mdcViewPortScrollListener;\r\n    private _initialized = false;\r\n    private _fixed = false;\r\n    private _waterfall = false;\r\n    private _fixedLastRowOnly = false;\r\n    private _flexible = false;\r\n    private _flexibleDefaultBehavior = false;\r\n\r\n    private mdcAdapter: MdcToolbarAdapter = {\r\n        hasClass: (className: string) => {\r\n            return this.root.nativeElement.classList.contains(className);\r\n        },\r\n        addClass: (className: string) => {\r\n            this.renderer.addClass(this.root.nativeElement, className);\r\n        },\r\n        removeClass: (className: string) => {\r\n            this.renderer.removeClass(this.root.nativeElement, className);\r\n        },            \r\n        registerScrollHandler: (handler: EventListener) => {\r\n            if (this._viewport)\r\n                this._viewport.addEventListener('scroll', handler, util.applyPassive());\r\n            else\r\n                window.addEventListener('scroll', handler, util.applyPassive());\r\n        },\r\n        deregisterScrollHandler: (handler: EventListener) => {\r\n            if (this._viewport)\r\n                this._viewport.removeEventListener('scroll', handler, util.applyPassive());\r\n            else\r\n                window.removeEventListener('scroll', handler, util.applyPassive());\r\n        },\r\n        registerResizeHandler: (handler: EventListener) => {\r\n            window.addEventListener('resize', handler, util.applyPassive());\r\n        },\r\n        deregisterResizeHandler: (handler: EventListener) => {\r\n            window.removeEventListener('resize', handler, util.applyPassive());\r\n        },\r\n        getViewportWidth: () => this._viewport ? this._viewport.clientWidth : window.innerWidth,\r\n        getViewportScrollY: () => this._viewport ? this._viewport.scrollTop : window.pageYOffset,\r\n        getOffsetHeight: () => this.root.nativeElement.offsetHeight,\r\n        getFirstRowElementOffsetHeight: () => this._firstRow._elm.nativeElement.offsetHeight,\r\n        notifyChange: (evtData: {flexibleExpansionRatio: number}) => {\r\n            this.expansionRatio.emit(evtData.flexibleExpansionRatio);\r\n        },\r\n        setStyle: (property: string, value: number) => {\r\n            this.renderer.setStyle(this.root.nativeElement, property, value);\r\n        },\r\n        setStyleForTitleElement: (property: string, value: number) => {\r\n            if (this._title)\r\n                this.renderer.setStyle(this._title._elm.nativeElement, property, value);\r\n        },\r\n        setStyleForFlexibleRowElement: (property: string, value: number) => {\r\n            this.renderer.setStyle(this._firstRow._elm.nativeElement, property, value);\r\n        },\r\n        setStyleForFixedAdjustElement: (property: string, value: number) => {\r\n            if (this.fixedAdjust)\r\n                this.renderer.setStyle(this.fixedAdjust._elm.nativeElement, property, value);\r\n        }\r\n    };\r\n    private foundation: { init: Function, destroy: Function } = new MDCToolbarFoundation(this.mdcAdapter);\r\n\r\n    constructor(private renderer: Renderer2, private root: ElementRef, private registry: MdcEventRegistry) {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // Using ngAfterViewInit instead of ngAfterContentInit, because the MDCToolbarFoundation.init\r\n        // uses MdcToolbarAdapter.hasClass on classes that we bind in this component. Those classes are only\r\n        // available after the view is fully initialized.\r\n        this._initialized = true;\r\n        if (this._viewport) {\r\n            this._mdcViewPortScrollListener = () => {this._updateViewPort();}\r\n            this._viewport.addEventListener('scroll', this._mdcViewPortScrollListener, util.applyPassive());\r\n        }\r\n        this._updateViewPort();\r\n        this.foundation.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._mdcViewPortScrollListener)\r\n            this._viewport.removeEventListener('scroll', this._mdcViewPortScrollListener, util.applyPassive());\r\n        this.foundation.destroy();\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    _updateViewPort() {\r\n        if (this._initialized && this._viewport) {\r\n            if (this._fixed) {\r\n                // simulate 'fixed' relative to view position of parent:\r\n                this.root.nativeElement.style.position = 'absolute';\r\n                this.root.nativeElement.style.top = this._viewport.scrollTop + 'px';\r\n            } else {\r\n                // reset to position from mdc stylesheets:\r\n                this.root.nativeElement.style.position = null;\r\n                this.root.nativeElement.style.top = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If set to a value other than false, the toolbar will be fixed to the top of the\r\n     * screen (or viewport).\r\n     */\r\n    @Input() @HostBinding('class.mdc-toolbar--fixed') get isFixed() {\r\n        return this._fixed;\r\n    }\r\n\r\n    set isFixed(val: any) {\r\n        let newValue = asBoolean(val);\r\n        if (this._initialized && this._fixed !== newValue)\r\n            throw new Error('isFixed directive should not be changed after the mdcToolbar is initialized');\r\n        this._fixed = newValue;\r\n    }\r\n\r\n    /**\r\n     * If set to a value other than false, and used in combination with <code>isFixed</code>\r\n     * the toolbar will become a waterfall toolbar.\r\n     * A waterfall toolbar is initially static and has no elevation, but when content scrolls under it,\r\n     * the toolbar becomes fixed and gains elevation.\r\n     */\r\n    @Input() @HostBinding('class.mdc-toolbar--waterfall') get isWaterfall() {\r\n        return this._waterfall;\r\n    }\r\n\r\n    set isWaterfall(val: any) {\r\n        this._waterfall = asBoolean(val);\r\n    }\r\n\r\n    /**\r\n     * If set to a value other than false, fixed toolbars will anchor only the last row to the top.\r\n     */\r\n    @Input() @HostBinding('class.mdc-toolbar--fixed-lastrow-only') get isFixedLastrowOnly() {\r\n        return this._fixedLastRowOnly;\r\n    }\r\n\r\n    set isFixedLastrowOnly(val: any) {\r\n        let newValue = asBoolean(val);\r\n        if (this._initialized && this._fixedLastRowOnly !== newValue)\r\n            throw new Error('isFixedLastrowOnly directive should not be changed after the mdcToolbar is initialized');\r\n        this._fixedLastRowOnly = newValue;\r\n    }\r\n\r\n    /**\r\n     * A flexible toolbar changes height when the user scrolls. Flexible behavior is highly customizable,\r\n     * quoted from the upstream <code>mdc-toolbar</code> documentation:\r\n     * <blockquote>\r\n     * We only define the change of flexible space size without making further assumptions.\r\n     * But we do recommend the height of flexible space should be an integral number of\r\n     * toolbar row height and provide a easier way for user to customize height.\r\n     * Users can adjust the height of flexible space through sass variable\r\n     * <code>$mdc-toolbar-ratio-to-extend-flexible</code> or css variable\r\n     * <code>--mdc-toolbar-ratio-to-extend-flexible</code>.\r\n     * </blockquote>\r\n     */\r\n    @Input() @HostBinding('class.mdc-toolbar--flexible') get isFlexible() {\r\n        return this._flexible;\r\n    }\r\n\r\n    set isFlexible(val: any) {\r\n        let newValue = asBoolean(val);\r\n        if (this._initialized && this._flexible !== newValue)\r\n            throw new Error('isFlexible directive should not be changed after the mdcToolbar is initialized');\r\n        this._flexible = newValue;\r\n    }\r\n\r\n    /**\r\n     * A default behavior for flexible toolbars.\r\n     * For more information see:\r\n     * <a href=\"https://github.com/material-components/material-components-web/tree/v0.23.0/packages/mdc-toolbar#flexible-toolbar-requires-javascript\">\r\n     * Flexible Toolbar documention\r\n     * </a>.\r\n     */\r\n    @Input() @HostBinding('class.mdc-toolbar--flexible-default-behavior') get isFlexibleDefaultBehavior() {\r\n        return this._flexibleDefaultBehavior;\r\n    }\r\n\r\n    set isFlexibleDefaultBehavior(val: any) {\r\n        let newValue = asBoolean(val);\r\n        if (this._initialized && this._flexibleDefaultBehavior !== newValue)\r\n            throw new Error('isFlexibleDefaultBehavior directive should not be changed after the mdcToolbar is initialized');\r\n        this._flexibleDefaultBehavior = newValue;\r\n    }\r\n\r\n    /**\r\n     * Assign any <code>HTMLElement</code> to this property to place a flexible toolbar fixed to that element\r\n     * (usually the parent container), instead of to the browser window. This property is mainly added for creating nice\r\n     * demos of toolbars embedded inside oher pages (such as on this documentation page). It is not recommended to use\r\n     * this for a real application toolbar. The position is kept fixed to the container element by listening\r\n     * for scroll/resize events, and using javascript to recompute the position. This may influence the smoothness\r\n     * of the scrolling experience, especially on mobile devices.\r\n     * The viewport element should have css styling: <code>position: relative</code>, and should have a fixed\r\n     * height.\r\n     */\r\n    @Input() get viewport() {\r\n        return this._viewport;\r\n    }\r\n\r\n    set viewport(elm: HTMLElement) {\r\n        if (this._initialized && elm !== this._viewport)\r\n            throw new Error('viewport directive should not be changed after the mdcToolbar is initialized');\r\n        this._viewport = elm;\r\n    }\r\n}\r\n","import { Directive, Input, OnDestroy } from '@angular/core';\r\nimport { asBoolean } from '../../utils/value.utils';\r\n\r\nlet scrollbarResizeListenerId: string;\r\nlet scrollbarResizeDirectives = 0;\r\n\r\nfunction initScrollbarResizeListener() {\r\n    if (scrollbarResizeListenerId)\r\n        return;\r\n    // create an invisible iframe, covering the full width of the window:\r\n    let iframe = document.createElement('iframe');\r\n    iframe.id = scrollbarResizeListenerId = 'scrollbarResizeListener_' + Math.random().toString(36).substr(2, 10)\r\n    iframe.style.cssText = 'position:absolute;margin:0;padding:0;border-width:0;overflow:hidden;height:0;width:100%;background-color:transparent;';\r\n    // make the iframe contentWindow listen to resize events (they will be triggered when the container adds or removes a\r\n    // vertical scrollbar, since it changes the width):\r\n    iframe.onload = function() {\r\n      iframe.contentWindow.addEventListener('resize', function() {\r\n        try {\r\n          var evt = document.createEvent('UIEvents');\r\n          evt.initUIEvent('resize', true, false, window, 0);\r\n          window.dispatchEvent(evt);\r\n        } catch(e) {}\r\n      });\r\n    };\r\n    // add to the page:\r\n    document.body.appendChild(iframe);\r\n}\r\n\r\nfunction destroyScrollbarResizeListener() {\r\n    if (scrollbarResizeListenerId != null) {\r\n        let iframe = document.getElementById(scrollbarResizeListenerId);\r\n        if (iframe)\r\n            iframe.parentElement.removeChild(iframe);\r\n        scrollbarResizeListenerId = null;\r\n    }\r\n}\r\n\r\n// TODO: add viewport option to do this for other elements that may\r\n//  get a scrollbar, and therefore influence their childrens layout.\r\n\r\n/**\r\n * Utility directive to trigger window 'resize' events not only when the browser window\r\n * is resized, but also when the browser window gets a vertical scrollbar.\r\n * This solves problems with directives that base their layout or position on the\r\n * width of the document body. When a scrollbar is added, the body width changes, but the browser\r\n * doesn't fire a 'resize' (or other) event. As long as at least one <code>mdcScrollbarResize</code>\r\n * directive is active on the page, 'resize' events will also be fired when the body width changes\r\n * as a consequence of the addition or removal of a vertical toolbar.\r\n * The directive adds a hidden iframe to the page, that contains the trickery to make this happen.\r\n * See this <a href=\"https://gist.github.com/OrganicPanda/8222636\">hacky-scrollbar-resize-listener.js\r\n * github gist</a> for the original idea.\r\n */\r\n@Directive({\r\n    selector: '[mdcScrollbarResize]'\r\n})\r\nexport class MdcScrollbarResizeDirective implements OnDestroy {\r\n    private _scrollbarResize = false;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._scrollbarResize) {\r\n            this._scrollbarResize = false;\r\n            --scrollbarResizeDirectives;\r\n            if (scrollbarResizeDirectives <= 0)\r\n                destroyScrollbarResizeListener();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set to false to disable triggering resize events because of addition/deletion of a scrollbar.\r\n     * The <code>mdcScrollbarResize</code> behavior is removed after <strong>all</strong>\r\n     * <code>mdcScrollbarResize</code> directives on the page are removed or have the value false.\r\n     */\r\n    @Input() get mdcScrollbarResize() {\r\n        return this._scrollbarResize;\r\n    }\r\n\r\n    set mdcScrollbarResize(val: any) {\r\n        let newValue = asBoolean(val);\r\n        if (newValue !== this._scrollbarResize) {\r\n            this._scrollbarResize = newValue;\r\n            if (newValue) {\r\n                ++scrollbarResizeDirectives;\r\n                initScrollbarResizeListener();\r\n            } else {\r\n                --scrollbarResizeDirectives;\r\n                if (scrollbarResizeDirectives <= 0)\r\n                    destroyScrollbarResizeListener();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MdcButtonDirective } from './components/button/mdc.button.directive';\r\nimport { MdcCardDirective,\r\n    MdcCardHorizontalDirective,\r\n    MdcCardPrimaryDirective,\r\n    MdcCardTitleDirective,\r\n    MdcCardSubtitleDirective,\r\n    MdcCardTextDirective,\r\n    MdcCardMediaDirective,\r\n    MdcCardMediaItemDirective,\r\n    MdcCardActionsDirective } from './components/card/mdc.card.directive';\r\nimport { MdcCheckboxDirective,\r\n    MdcCheckboxInputDirective } from './components/checkbox/mdc.checkbox.directive';\r\nimport { MdcElevationDirective } from './components/elevation/mdc.elevation.directive';\r\nimport { MdcFabDirective,\r\n    MdcFabIconDirective } from './components/fab/mdc.fab.directive';\r\nimport { MdcFormFieldDirective,\r\n    MdcFormFieldInputDirective,\r\n    MdcFormFieldLabelDirective } from './components/form-field/mdc.form-field.directive';\r\nimport { MdcIconToggleDirective,\r\n    MdcIconToggleIconDirective,\r\n    MdcFormsIconToggleDirective } from './components/icon-toggle/mdc.icon-toggle.directive';\r\nimport { MdcLinearProgressDirective } from './components/linear-progress/mdc.linear-progress.directive';\r\nimport { MdcListDividerDirective,\r\n    MdcListItemDirective,\r\n    MdcListItemTextDirective,\r\n    MdcListItemTextSecondaryDirective,\r\n    MdcListItemStartDetailDirective,\r\n    MdcListItemEndDetailDirective,\r\n    MdcListDirective,\r\n    MdcListGroupSubHeaderDirective,\r\n    MdcListGroupDirective } from './components/list/mdc.list.directive';\r\nimport { MdcMenuAnchorDirective, MdcSimpleMenuDirective } from './components/menu/mdc.simple.menu.directive';\r\nimport { MdcRadioDirective,\r\n    MdcRadioInputDirective } from './components/radio/mdc.radio.directive';\r\nimport { MdcRippleDirective } from './components/ripple/mdc.ripple.directive';\r\nimport { MdcSelectDirective,\r\n    MdcSelectTextDirective,\r\n    MdcFormsSelectDirective,\r\n    MdcSelectNativeDirective,\r\n    MdcSelectMultipleNativeDirective,\r\n    MdcSelectGroupNativeDirective,\r\n    MdcSelectOptionNativeDirective } from './components/select/mdc.select.directive';\r\nimport { MdcSliderDirective,\r\n    MdcFormsSliderDirective } from './components/slider/mdc.slider.directive';\r\nimport { MdcSnackbarService, MDC_SNACKBAR_PROVIDER } from './components/snackbar/mdc.snackbar.service';\r\nimport { MdcSwitchInputDirective,\r\n    MdcSwitchDirective } from './components/switch/mdc.switch.directive';    \r\nimport { AbstractMdcTabDirective, MdcTabDirective,\r\n    MdcTabIconDirective,\r\n    MdcTabIconTextDirective,\r\n    MdcTabChange } from './components/tabs/mdc.tab.directive';\r\nimport { MdcTabRouterDirective } from './components/tabs/mdc.tab.router.directive';\r\nimport { MdcTabBarDirective } from './components/tabs/mdc.tab.bar.directive';\r\nimport { MdcTabBarScrollerDirective,\r\n    MdcTabBarScrollerInnerDirective,\r\n    MdcTabBarScrollerBackDirective,\r\n    MdcTabBarScrollerForwardDirective,\r\n    MdcTabBarScrollerFrameDirective } from './components/tabs/mdc.tab.bar.scroller.directive';\r\nimport { MdcTextFieldDirective,\r\n    MdcTextFieldInputDirective,\r\n    MdcTextFieldIconDirective,\r\n    MdcTextFieldLabelDirective,\r\n    MdcTextFieldHelptextDirective } from './components/text-field/mdc.text-field.directive';\r\nimport { MdcToolbarDirective,\r\n    MdcToolbarRowDirective,\r\n    MdcToolbarSectionDirective,\r\n    MdcToolbarTitleDirective,\r\n    MdcToolbarIcon,\r\n    MdcToolbarMenuIcon,\r\n    MdcToolbarFixedAdjustDirective } from './components/toolbar/mdc.toolbar.directive';\r\nimport { MdcScrollbarResizeDirective } from './components/utility/mdc.scrollbar-resize.directive';\r\nimport { MdcEventRegistry, MDC_EVENT_REGISTRY_PROVIDER } from './utils/mdc.event.registry';\r\n\r\nexport { MdcButtonDirective } from './components/button/mdc.button.directive';\r\nexport { MdcCardDirective,\r\n    MdcCardHorizontalDirective,\r\n    MdcCardPrimaryDirective,\r\n    MdcCardTitleDirective,\r\n    MdcCardSubtitleDirective,\r\n    MdcCardTextDirective,\r\n    MdcCardMediaDirective,\r\n    MdcCardMediaItemDirective,\r\n    MdcCardActionsDirective } from './components/card/mdc.card.directive';\r\nexport { MdcCheckboxDirective,\r\n    MdcCheckboxInputDirective } from './components/checkbox/mdc.checkbox.directive';\r\nexport { MdcElevationDirective } from './components/elevation/mdc.elevation.directive';\r\nexport { MdcFabDirective,\r\n    MdcFabIconDirective } from './components/fab/mdc.fab.directive';\r\nexport { MdcFormFieldDirective,\r\n    MdcFormFieldInputDirective,\r\n    MdcFormFieldLabelDirective } from './components/form-field/mdc.form-field.directive';\r\nexport { MdcIconToggleDirective,\r\n    MdcIconToggleIconDirective,\r\n    MdcFormsIconToggleDirective } from './components/icon-toggle/mdc.icon-toggle.directive';\r\nexport { MdcLinearProgressDirective } from './components/linear-progress/mdc.linear-progress.directive';\r\nexport { MdcListDividerDirective,\r\n    MdcListItemDirective,\r\n    MdcListItemTextDirective,\r\n    MdcListItemTextSecondaryDirective,\r\n    MdcListItemStartDetailDirective,\r\n    MdcListItemEndDetailDirective,\r\n    MdcListDirective,\r\n    MdcListGroupSubHeaderDirective,\r\n    MdcListGroupDirective } from './components/list/mdc.list.directive';\r\nexport { MdcMenuAnchorDirective, MdcSimpleMenuDirective } from './components/menu/mdc.simple.menu.directive';    \r\nexport { MdcRadioDirective,\r\n    MdcRadioInputDirective } from './components/radio/mdc.radio.directive';\r\nexport { MdcRippleDirective } from './components/ripple/mdc.ripple.directive';\r\nexport { MdcSelectDirective,\r\n    MdcSelectTextDirective,\r\n    MdcFormsSelectDirective,\r\n    MdcSelectNativeDirective,\r\n    MdcSelectMultipleNativeDirective,\r\n    MdcSelectGroupNativeDirective,\r\n    MdcSelectOptionNativeDirective } from './components/select/mdc.select.directive';\r\nexport { MdcSliderDirective,\r\n    MdcFormsSliderDirective } from './components/slider/mdc.slider.directive';\r\nexport { MdcSnackbarMessage } from './components/snackbar/mdc.snackbar.message';\r\nexport { MdcSnackbarService } from './components/snackbar/mdc.snackbar.service';\r\nexport { MdcSwitchInputDirective,\r\n    MdcSwitchDirective } from './components/switch/mdc.switch.directive';\r\nexport { AbstractMdcTabDirective, MdcTabDirective,\r\n    MdcTabIconDirective,\r\n    MdcTabIconTextDirective,\r\n    MdcTabChange } from './components/tabs/mdc.tab.directive';\r\nexport { MdcTabRouterDirective } from './components/tabs/mdc.tab.router.directive';\r\nexport { MdcTabBarDirective } from './components/tabs/mdc.tab.bar.directive';\r\nexport { MdcTabBarScrollerDirective,\r\n    MdcTabBarScrollerInnerDirective,\r\n    MdcTabBarScrollerBackDirective,\r\n    MdcTabBarScrollerForwardDirective,\r\n    MdcTabBarScrollerFrameDirective }\r\nexport { MdcTextFieldDirective,\r\n    MdcTextFieldInputDirective,\r\n    MdcTextFieldIconDirective,\r\n    MdcTextFieldLabelDirective,\r\n    MdcTextFieldHelptextDirective } from './components/text-field/mdc.text-field.directive';\r\nexport { MdcToolbarDirective,\r\n    MdcToolbarRowDirective,\r\n    MdcToolbarSectionDirective,\r\n    MdcToolbarTitleDirective,\r\n    MdcToolbarIcon,\r\n    MdcToolbarMenuIcon,\r\n    MdcToolbarFixedAdjustDirective } from './components/toolbar/mdc.toolbar.directive';\r\nexport { MdcScrollbarResizeDirective } from './components/utility/mdc.scrollbar-resize.directive';\r\nexport { MdcEventRegistry } from './utils/mdc.event.registry';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    providers: [\r\n        MDC_EVENT_REGISTRY_PROVIDER,\r\n        MDC_SNACKBAR_PROVIDER\r\n    ],\r\n    declarations: [\r\n        MdcButtonDirective,\r\n        MdcCardDirective, MdcCardHorizontalDirective, MdcCardPrimaryDirective, MdcCardTitleDirective, MdcCardSubtitleDirective,\r\n        MdcCardTextDirective, MdcCardMediaDirective, MdcCardMediaItemDirective, MdcCardActionsDirective,\r\n        MdcCheckboxDirective, MdcCheckboxInputDirective,\r\n        MdcElevationDirective,\r\n        MdcFabDirective, MdcFabIconDirective,\r\n        MdcFormFieldDirective, MdcFormFieldInputDirective, MdcFormFieldLabelDirective,\r\n        MdcIconToggleDirective, MdcIconToggleIconDirective, MdcFormsIconToggleDirective,\r\n        MdcLinearProgressDirective,\r\n        MdcListDividerDirective, MdcListItemDirective, MdcListItemTextDirective, MdcListItemTextSecondaryDirective,\r\n        MdcListItemStartDetailDirective, MdcListItemEndDetailDirective, MdcListDirective, MdcListGroupSubHeaderDirective, MdcListGroupDirective,\r\n        MdcMenuAnchorDirective, MdcSimpleMenuDirective,\r\n        MdcRadioDirective, MdcRadioInputDirective,\r\n        MdcRippleDirective,\r\n        MdcSelectDirective, MdcSelectTextDirective, MdcFormsSelectDirective,\r\n        MdcSelectNativeDirective, MdcSelectMultipleNativeDirective, MdcSelectGroupNativeDirective, MdcSelectOptionNativeDirective,\r\n        MdcSliderDirective, MdcFormsSliderDirective,\r\n        MdcSwitchInputDirective, MdcSwitchDirective,\r\n        MdcTabDirective, MdcTabIconDirective, MdcTabIconTextDirective,\r\n        MdcTabRouterDirective,\r\n        MdcTabBarDirective,\r\n        MdcTabBarScrollerDirective, MdcTabBarScrollerInnerDirective, MdcTabBarScrollerBackDirective, MdcTabBarScrollerForwardDirective, MdcTabBarScrollerFrameDirective,\r\n        MdcTextFieldDirective, MdcTextFieldInputDirective, MdcTextFieldIconDirective, MdcTextFieldLabelDirective, MdcTextFieldHelptextDirective,\r\n        MdcToolbarDirective, MdcToolbarRowDirective, MdcToolbarSectionDirective, MdcToolbarTitleDirective, MdcToolbarIcon, MdcToolbarMenuIcon, MdcToolbarFixedAdjustDirective,\r\n        MdcScrollbarResizeDirective\r\n    ],\r\n    exports: [\r\n        MdcButtonDirective,\r\n        MdcCardDirective, MdcCardHorizontalDirective, MdcCardPrimaryDirective, MdcCardTitleDirective, MdcCardSubtitleDirective,\r\n        MdcCardTextDirective, MdcCardMediaDirective, MdcCardMediaItemDirective, MdcCardActionsDirective,\r\n        MdcCheckboxDirective, MdcCheckboxInputDirective,\r\n        MdcElevationDirective,\r\n        MdcFabDirective, MdcFabIconDirective,\r\n        MdcFormFieldDirective, MdcFormFieldInputDirective, MdcFormFieldLabelDirective,\r\n        MdcIconToggleDirective, MdcIconToggleIconDirective, MdcFormsIconToggleDirective,\r\n        MdcLinearProgressDirective,\r\n        MdcListDividerDirective, MdcListItemDirective, MdcListItemTextDirective, MdcListItemTextSecondaryDirective,\r\n        MdcListItemStartDetailDirective, MdcListItemEndDetailDirective, MdcListDirective, MdcListGroupSubHeaderDirective, MdcListGroupDirective,\r\n        MdcMenuAnchorDirective, MdcSimpleMenuDirective,\r\n        MdcRadioDirective, MdcRadioInputDirective,\r\n        MdcRippleDirective,\r\n        MdcSelectDirective, MdcSelectTextDirective, MdcFormsSelectDirective,\r\n        MdcSelectNativeDirective, MdcSelectMultipleNativeDirective, MdcSelectGroupNativeDirective, MdcSelectOptionNativeDirective,\r\n        MdcSliderDirective, MdcFormsSliderDirective,\r\n        MdcSwitchInputDirective, MdcSwitchDirective,\r\n        MdcTabDirective, MdcTabIconDirective, MdcTabIconTextDirective,\r\n        MdcTabRouterDirective,\r\n        MdcTabBarDirective,\r\n        MdcTabBarScrollerDirective, MdcTabBarScrollerInnerDirective, MdcTabBarScrollerBackDirective, MdcTabBarScrollerForwardDirective, MdcTabBarScrollerFrameDirective,\r\n        MdcTextFieldDirective, MdcTextFieldInputDirective, MdcTextFieldIconDirective, MdcTextFieldLabelDirective, MdcTextFieldHelptextDirective,\r\n        MdcToolbarDirective, MdcToolbarRowDirective, MdcToolbarSectionDirective, MdcToolbarTitleDirective, MdcToolbarIcon, MdcToolbarMenuIcon, MdcToolbarFixedAdjustDirective,\r\n        MdcScrollbarResizeDirective\r\n    ]\r\n})\r\nexport class MaterialModule {}\r\n","// Just a dummy file:\r\n//  The build/material.js flatflatModuleOutFile in our tsconfig.json has sourcemappings to\r\n//  non-existent src/material.ts. This empty file prevents errors during the building\r\n//  of sourcemaps for material.js. It's probably an angular ngc bug. Having an empty file\r\n//  at the referenced location prevents having errors like:\r\n//  {\"errno\":-4058,\"code\":\"ENOENT\",\"syscall\":\"open\",\"path\":\"...\\\\material\\\\src\\\\material.ts\"}\r\n//  in our sourcemaps\r\n"],"names":["util","MDCRippleFoundation","Injectable","Optional","SkipSelf","tslib_1.__extends","Directive","forwardRef","ElementRef","Renderer2","HostBinding","Input","ContentChildren","NgControl","Self","MDCCheckboxFoundation","ContentChild","MDCFormFieldFoundation","EventEmitter","MDCIconToggleFoundation","Output","HostListener","NG_VALUE_ACCESSOR","MDCLinearProgressFoundation","MDCSimpleMenuFoundation","MDCSimpleMenu","MDCRadioFoundation","Subject","MDCSelectFoundation","takeUntil","MDCSliderFoundation","SimpleChange","MDCSnackbar","getCorrectEventName","MDCSnackbarFoundation","filter","take","MDCTabFoundation","router","NavigationEnd","Router","ChangeDetectorRef","RouterLink","RouterLinkWithHref","MDCTabBarFoundation","CLASS_INDICATOR","tabs","getCorrectPropertyName","MDCTabBarScrollerFoundation","nextId","MDCTextFieldFoundation","MDCToolbarFoundation","NgModule","CommonModule"],"mappings":"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"}